
remote.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002a6  00800100  00001482  00001516  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001482  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000204  008003a6  008003a6  000017bc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001818  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00001858  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011f6  00000000  00000000  00001908  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a9  00000000  00000000  00002afe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ab0  00000000  00000000  000034a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d8  00000000  00000000  00003f58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000057f  00000000  00000000  00004130  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009c7  00000000  00000000  000046af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00005076  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	13 e0       	ldi	r17, 0x03	; 3
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e2 e8       	ldi	r30, 0x82	; 130
      88:	f4 e1       	ldi	r31, 0x14	; 20
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a6 3a       	cpi	r26, 0xA6	; 166
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	25 e0       	ldi	r18, 0x05	; 5
      98:	a6 ea       	ldi	r26, 0xA6	; 166
      9a:	b3 e0       	ldi	r27, 0x03	; 3
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	aa 3a       	cpi	r26, 0xAA	; 170
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 85 00 	call	0x10a	; 0x10a <main>
      aa:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <usart_putchar>:
	return ADCW;
}

int usart_putchar(char character, FILE *stream)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
      b2:	e0 ec       	ldi	r30, 0xC0	; 192
      b4:	f0 e0       	ldi	r31, 0x00	; 0
      b6:	90 81       	ld	r25, Z
      b8:	95 ff       	sbrs	r25, 5
      ba:	fd cf       	rjmp	.-6      	; 0xb6 <usart_putchar+0x4>

	UDR0 = character;
      bc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>

	return 0;
}
      c0:	80 e0       	ldi	r24, 0x00	; 0
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	08 95       	ret

000000c6 <usart_getchar>:

int usart_getchar(FILE *stream)
{
	while ((UCSR0A & (1 << RXC0)) == 0) {};
      c6:	e0 ec       	ldi	r30, 0xC0	; 192
      c8:	f0 e0       	ldi	r31, 0x00	; 0
      ca:	80 81       	ld	r24, Z
      cc:	88 23       	and	r24, r24
      ce:	ec f7       	brge	.-6      	; 0xca <usart_getchar+0x4>

	return UDR0;
      d0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	08 95       	ret

000000d8 <read_adc>:
#define UART_BAUD_REGISTERS  (((F_CPU / (UART_BAUD_RATE * 16UL))) - 1)

// Read the AD conversion result
unsigned int read_adc(unsigned char adc_input)
{
	ADMUX=adc_input | ADC_VREF_TYPE;
      d8:	80 64       	ori	r24, 0x40	; 64
      da:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      de:	85 e3       	ldi	r24, 0x35	; 53
      e0:	8a 95       	dec	r24
      e2:	f1 f7       	brne	.-4      	; 0xe0 <read_adc+0x8>
      e4:	00 00       	nop
	// Delay needed for the stabilization of the ADC input voltage
	_delay_us(10);
	// Start the AD conversion
	ADCSRA|=(1<<ADSC);
      e6:	ea e7       	ldi	r30, 0x7A	; 122
      e8:	f0 e0       	ldi	r31, 0x00	; 0
      ea:	80 81       	ld	r24, Z
      ec:	80 64       	ori	r24, 0x40	; 64
      ee:	80 83       	st	Z, r24
	// Wait for the AD conversion to complete
	while ((ADCSRA & (1<<ADIF))==0);
      f0:	80 81       	ld	r24, Z
      f2:	84 ff       	sbrs	r24, 4
      f4:	fd cf       	rjmp	.-6      	; 0xf0 <read_adc+0x18>
	ADCSRA|=(1<<ADIF);
      f6:	ea e7       	ldi	r30, 0x7A	; 122
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	80 81       	ld	r24, Z
      fc:	80 61       	ori	r24, 0x10	; 16
      fe:	80 83       	st	Z, r24
	return ADCW;
     100:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     104:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
     108:	08 95       	ret

0000010a <main>:
}

FILE uart_str = FDEV_SETUP_STREAM(usart_putchar, usart_getchar, _FDEV_SETUP_RW);

void main(void)
{
     10a:	cf 93       	push	r28
     10c:	df 93       	push	r29
     10e:	cd b7       	in	r28, 0x3d	; 61
     110:	de b7       	in	r29, 0x3e	; 62
     112:	62 97       	sbiw	r28, 0x12	; 18
     114:	0f b6       	in	r0, 0x3f	; 63
     116:	f8 94       	cli
     118:	de bf       	out	0x3e, r29	; 62
     11a:	0f be       	out	0x3f, r0	; 63
     11c:	cd bf       	out	0x3d, r28	; 61
	// Declare your local variables here
	int i, j;
	char str[16];
	stdout = &uart_str;
     11e:	80 e0       	ldi	r24, 0x00	; 0
     120:	91 e0       	ldi	r25, 0x01	; 1
     122:	90 93 a7 05 	sts	0x05A7, r25	; 0x8005a7 <__iob+0x3>
     126:	80 93 a6 05 	sts	0x05A6, r24	; 0x8005a6 <__iob+0x2>

	// Crystal Oscillator division factor: 1
	#pragma optsize-
	CLKPR=(1<<CLKPCE);
     12a:	e1 e6       	ldi	r30, 0x61	; 97
     12c:	f0 e0       	ldi	r31, 0x00	; 0
     12e:	80 e8       	ldi	r24, 0x80	; 128
     130:	80 83       	st	Z, r24
	CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
     132:	10 82       	st	Z, r1
	#endif

	// Input/Output Ports initialization
	// Port B initialization
	// Function: Bit7=In Bit6=In Bit5=Out Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
	DDRB=(0<<DDB7) | (0<<DDB6) | (1<<DDB5) | (0<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
     134:	9f e2       	ldi	r25, 0x2F	; 47
     136:	94 b9       	out	0x04, r25	; 4
	// State: Bit7=T Bit6=T Bit5=0 Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=1
	PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (1<<PORTB0);
     138:	91 e0       	ldi	r25, 0x01	; 1
     13a:	95 b9       	out	0x05, r25	; 5

	// Port C initialization
	// Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=Out
	DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (1<<DDC1) | (1<<DDC0);
     13c:	93 e0       	ldi	r25, 0x03	; 3
     13e:	97 b9       	out	0x07, r25	; 7
	// State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=1 Bit0=1
	PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (1<<PORTC1) | (1<<PORTC0);
     140:	98 b9       	out	0x08, r25	; 8

	// Port D initialization
	// Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
	DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
     142:	8a b9       	out	0x0a, r24	; 10
	// State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
	PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
     144:	1b b8       	out	0x0b, r1	; 11
	// Clock source: System Clock
	// Clock value: Timer 0 Stopped
	// Mode: Normal top=0xFF
	// OC0A output: Disconnected
	// OC0B output: Disconnected
	TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
     146:	14 bc       	out	0x24, r1	; 36
	TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
     148:	15 bc       	out	0x25, r1	; 37
	TCNT0=0x00;
     14a:	16 bc       	out	0x26, r1	; 38
	OCR0A=0x00;
     14c:	17 bc       	out	0x27, r1	; 39
	OCR0B=0x00;
     14e:	18 bc       	out	0x28, r1	; 40
	// Input Capture on Falling Edge
	// Timer1 Overflow Interrupt: Off
	// Input Capture Interrupt: Off
	// Compare A Match Interrupt: Off
	// Compare B Match Interrupt: Off
	TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
     150:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
     154:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TCNT1H=0x00;
     158:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
	TCNT1L=0x00;
     15c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	ICR1H=0x00;
     160:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
	ICR1L=0x00;
     164:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	OCR1AH=0x00;
     168:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL=0x00;
     16c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	OCR1BH=0x00;
     170:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
	OCR1BL=0x00;
     174:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	// Clock source: System Clock
	// Clock value: Timer2 Stopped
	// Mode: Normal top=0xFF
	// OC2A output: Disconnected
	// OC2B output: Disconnected
	ASSR=(0<<EXCLK) | (0<<AS2);
     178:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7f80b6>
	TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
     17c:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
     180:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	TCNT2=0x00;
     184:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	OCR2A=0x00;
     188:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	OCR2B=0x00;
     18c:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>

	// Timer/Counter 0 Interrupt(s) initialization
	TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
     190:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

	// Timer/Counter 1 Interrupt(s) initialization
	TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
     194:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

	// Timer/Counter 2 Interrupt(s) initialization
	TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
     198:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>
	// INT0: Off
	// INT1: Off
	// Interrupt on any change on pins PCINT0-7: Off
	// Interrupt on any change on pins PCINT8-14: Off
	// Interrupt on any change on pins PCINT16-23: Off
	EICRA=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
     19c:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK=(0<<INT1) | (0<<INT0);
     1a0:	1d ba       	out	0x1d, r1	; 29
	PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
     1a2:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	// Communication Parameters: 8 Data, 1 Stop, No Parity
	// USART Receiver: On
	// USART Transmitter: On
	// USART Mode: Asynchronous
	// USART Baud Rate: 9600
	UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
     1a6:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
	UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
     1aa:	98 e1       	ldi	r25, 0x18	; 24
     1ac:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
     1b0:	96 e0       	ldi	r25, 0x06	; 6
     1b2:	90 93 c2 00 	sts	0x00C2, r25	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UBRR0H=0x00;
     1b6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L=0x67;
     1ba:	97 e6       	ldi	r25, 0x67	; 103
     1bc:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Analog Comparator: Off
	// The Analog Comparator's positive input is
	// connected to the AIN0 pin
	// The Analog Comparator's negative input is
	// connected to the AIN1 pin
	ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
     1c0:	80 bf       	out	0x30, r24	; 48
	// Digital input buffer on AIN0: On
	// Digital input buffer on AIN1: On
	DIDR1=(0<<AIN0D) | (0<<AIN1D);
     1c2:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <__TEXT_REGION_LENGTH__+0x7f807f>
	// ADC Clock frequency: 1000,000 kHz
	// ADC Voltage Reference: AVCC pin
	// ADC Auto Trigger Source: ADC Stopped
	// Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
	// ADC4: On, ADC5: On
	DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (0<<ADC0D);
     1c6:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
	ADMUX=ADC_VREF_TYPE;
     1ca:	80 e4       	ldi	r24, 0x40	; 64
     1cc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
     1d0:	84 e8       	ldi	r24, 0x84	; 132
     1d2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
     1d6:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	// SPI Type: Master
	// SPI Clock Rate: 4000,000 kHz
	// SPI Clock Phase: Cycle Start
	// SPI Clock Polarity: Low
	// SPI Data Order: MSB First
	SPCR=(0<<SPIE) | (1<<SPE) | (0<<DORD) | (1<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
     1da:	80 e5       	ldi	r24, 0x50	; 80
     1dc:	8c bd       	out	0x2c, r24	; 44
	SPSR=(0<<SPI2X);
     1de:	1d bc       	out	0x2d, r1	; 45

	// TWI initialization
	// TWI disabled
	TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
     1e0:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	LcdInit ();
     1e4:	0e 94 9c 03 	call	0x738	; 0x738 <LcdInit>
	{
		// Place your code here
		LcdClear ();

		i = read_adc(6);
		printf ("%d ", i);
     1e8:	0f 2e       	mov	r0, r31
     1ea:	ff e0       	ldi	r31, 0x0F	; 15
     1ec:	8f 2e       	mov	r8, r31
     1ee:	f1 e0       	ldi	r31, 0x01	; 1
     1f0:	9f 2e       	mov	r9, r31
     1f2:	f0 2d       	mov	r31, r0
		snprintf(str, sizeof(str), "Throttle: %d", i);
     1f4:	0f 2e       	mov	r0, r31
     1f6:	f3 e1       	ldi	r31, 0x13	; 19
     1f8:	af 2e       	mov	r10, r31
     1fa:	f1 e0       	ldi	r31, 0x01	; 1
     1fc:	bf 2e       	mov	r11, r31
     1fe:	f0 2d       	mov	r31, r0
     200:	68 94       	set
     202:	33 24       	eor	r3, r3
     204:	34 f8       	bld	r3, 4
     206:	8e 01       	movw	r16, r28
     208:	0d 5f       	subi	r16, 0xFD	; 253
     20a:	1f 4f       	sbci	r17, 0xFF	; 255
		LcdGotoXY (0, 0);
		LcdStr (FONT_1X, str);

		i = read_adc(7);
		printf ("%d\n\r", i);
     20c:	0f 2e       	mov	r0, r31
     20e:	f0 e2       	ldi	r31, 0x20	; 32
     210:	cf 2e       	mov	r12, r31
     212:	f1 e0       	ldi	r31, 0x01	; 1
     214:	df 2e       	mov	r13, r31
     216:	f0 2d       	mov	r31, r0
		snprintf(str, sizeof(str), "Rudder: %d", i - 511);
     218:	0f 2e       	mov	r0, r31
     21a:	f5 e2       	ldi	r31, 0x25	; 37
     21c:	ef 2e       	mov	r14, r31
     21e:	f1 e0       	ldi	r31, 0x01	; 1
     220:	ff 2e       	mov	r15, r31
     222:	f0 2d       	mov	r31, r0
		LcdGotoXY (0, 1);
		LcdStr (FONT_1X, str);
		
		j = scanf ("%d", &i);
     224:	9e 01       	movw	r18, r28
     226:	2f 5f       	subi	r18, 0xFF	; 255
     228:	3f 4f       	sbci	r19, 0xFF	; 255
     22a:	39 01       	movw	r6, r18
     22c:	0f 2e       	mov	r0, r31
     22e:	fd e1       	ldi	r31, 0x1D	; 29
     230:	4f 2e       	mov	r4, r31
     232:	f1 e0       	ldi	r31, 0x01	; 1
     234:	5f 2e       	mov	r5, r31
     236:	f0 2d       	mov	r31, r0
		if (j > 0) {
			i = i * 19;
     238:	0f 2e       	mov	r0, r31
     23a:	f3 e1       	ldi	r31, 0x13	; 19
     23c:	2f 2e       	mov	r2, r31
     23e:	f0 2d       	mov	r31, r0
	LcdInit ();

	while (1)
	{
		// Place your code here
		LcdClear ();
     240:	0e 94 e7 01 	call	0x3ce	; 0x3ce <LcdClear>

		i = read_adc(6);
     244:	86 e0       	ldi	r24, 0x06	; 6
     246:	0e 94 6c 00 	call	0xd8	; 0xd8 <read_adc>
     24a:	89 83       	std	Y+1, r24	; 0x01
     24c:	9a 83       	std	Y+2, r25	; 0x02
		printf ("%d ", i);
     24e:	9f 93       	push	r25
     250:	8f 93       	push	r24
     252:	9f 92       	push	r9
     254:	8f 92       	push	r8
     256:	0e 94 00 04 	call	0x800	; 0x800 <printf>
		snprintf(str, sizeof(str), "Throttle: %d", i);
     25a:	8a 81       	ldd	r24, Y+2	; 0x02
     25c:	8f 93       	push	r24
     25e:	89 81       	ldd	r24, Y+1	; 0x01
     260:	8f 93       	push	r24
     262:	bf 92       	push	r11
     264:	af 92       	push	r10
     266:	1f 92       	push	r1
     268:	3f 92       	push	r3
     26a:	1f 93       	push	r17
     26c:	0f 93       	push	r16
     26e:	0e 94 2c 04 	call	0x858	; 0x858 <snprintf>
		LcdGotoXY (0, 0);
     272:	60 e0       	ldi	r22, 0x00	; 0
     274:	80 e0       	ldi	r24, 0x00	; 0
     276:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <LcdGotoXY>
		LcdStr (FONT_1X, str);
     27a:	b8 01       	movw	r22, r16
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	0e 94 23 03 	call	0x646	; 0x646 <LcdStr>

		i = read_adc(7);
     282:	87 e0       	ldi	r24, 0x07	; 7
     284:	0e 94 6c 00 	call	0xd8	; 0xd8 <read_adc>
     288:	89 83       	std	Y+1, r24	; 0x01
     28a:	9a 83       	std	Y+2, r25	; 0x02
		printf ("%d\n\r", i);
     28c:	9f 93       	push	r25
     28e:	8f 93       	push	r24
     290:	df 92       	push	r13
     292:	cf 92       	push	r12
     294:	0e 94 00 04 	call	0x800	; 0x800 <printf>
		snprintf(str, sizeof(str), "Rudder: %d", i - 511);
     298:	89 81       	ldd	r24, Y+1	; 0x01
     29a:	9a 81       	ldd	r25, Y+2	; 0x02
     29c:	8f 5f       	subi	r24, 0xFF	; 255
     29e:	91 40       	sbci	r25, 0x01	; 1
     2a0:	9f 93       	push	r25
     2a2:	8f 93       	push	r24
     2a4:	ff 92       	push	r15
     2a6:	ef 92       	push	r14
     2a8:	1f 92       	push	r1
     2aa:	3f 92       	push	r3
     2ac:	1f 93       	push	r17
     2ae:	0f 93       	push	r16
     2b0:	0e 94 2c 04 	call	0x858	; 0x858 <snprintf>
		LcdGotoXY (0, 1);
     2b4:	61 e0       	ldi	r22, 0x01	; 1
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <LcdGotoXY>
		LcdStr (FONT_1X, str);
     2bc:	b8 01       	movw	r22, r16
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	0e 94 23 03 	call	0x646	; 0x646 <LcdStr>
		
		j = scanf ("%d", &i);
     2c4:	7f 92       	push	r7
     2c6:	6f 92       	push	r6
     2c8:	5f 92       	push	r5
     2ca:	4f 92       	push	r4
     2cc:	0e 94 16 04 	call	0x82c	; 0x82c <scanf>
		if (j > 0) {
     2d0:	0f b6       	in	r0, 0x3f	; 63
     2d2:	f8 94       	cli
     2d4:	de bf       	out	0x3e, r29	; 62
     2d6:	0f be       	out	0x3f, r0	; 63
     2d8:	cd bf       	out	0x3d, r28	; 61
     2da:	18 16       	cp	r1, r24
     2dc:	19 06       	cpc	r1, r25
     2de:	74 f5       	brge	.+92     	; 0x33c <main+0x232>
			i = i * 19;
     2e0:	29 81       	ldd	r18, Y+1	; 0x01
     2e2:	3a 81       	ldd	r19, Y+2	; 0x02
     2e4:	22 9e       	mul	r2, r18
     2e6:	c0 01       	movw	r24, r0
     2e8:	23 9e       	mul	r2, r19
     2ea:	90 0d       	add	r25, r0
     2ec:	11 24       	eor	r1, r1
     2ee:	9a 83       	std	Y+2, r25	; 0x02
     2f0:	89 83       	std	Y+1, r24	; 0x01
			snprintf(str, sizeof(str), "Boat: %d.%d V", i/1000, (i%1000)/100);
     2f2:	68 ee       	ldi	r22, 0xE8	; 232
     2f4:	73 e0       	ldi	r23, 0x03	; 3
     2f6:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     2fa:	26 2f       	mov	r18, r22
     2fc:	37 2f       	mov	r19, r23
     2fe:	64 e6       	ldi	r22, 0x64	; 100
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     306:	7f 93       	push	r23
     308:	6f 93       	push	r22
     30a:	3f 93       	push	r19
     30c:	2f 93       	push	r18
     30e:	80 e3       	ldi	r24, 0x30	; 48
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	9f 93       	push	r25
     314:	8f 93       	push	r24
     316:	1f 92       	push	r1
     318:	3f 92       	push	r3
     31a:	1f 93       	push	r17
     31c:	0f 93       	push	r16
     31e:	0e 94 2c 04 	call	0x858	; 0x858 <snprintf>
			LcdGotoXY (0, 3);
     322:	63 e0       	ldi	r22, 0x03	; 3
     324:	80 e0       	ldi	r24, 0x00	; 0
     326:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <LcdGotoXY>
			LcdStr (FONT_1X, str);
     32a:	b8 01       	movw	r22, r16
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	0e 94 23 03 	call	0x646	; 0x646 <LcdStr>
     332:	0f b6       	in	r0, 0x3f	; 63
     334:	f8 94       	cli
     336:	de bf       	out	0x3e, r29	; 62
     338:	0f be       	out	0x3f, r0	; 63
     33a:	cd bf       	out	0x3d, r28	; 61
		}

		i = read_adc(5) * 19;
     33c:	85 e0       	ldi	r24, 0x05	; 5
     33e:	0e 94 6c 00 	call	0xd8	; 0xd8 <read_adc>
     342:	9c 01       	movw	r18, r24
     344:	22 9e       	mul	r2, r18
     346:	c0 01       	movw	r24, r0
     348:	23 9e       	mul	r2, r19
     34a:	90 0d       	add	r25, r0
     34c:	11 24       	eor	r1, r1
     34e:	9a 83       	std	Y+2, r25	; 0x02
     350:	89 83       	std	Y+1, r24	; 0x01
		snprintf(str, sizeof(str), "Remote: %d.%d V", i/1000, (i%1000)/100);
     352:	68 ee       	ldi	r22, 0xE8	; 232
     354:	73 e0       	ldi	r23, 0x03	; 3
     356:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     35a:	26 2f       	mov	r18, r22
     35c:	37 2f       	mov	r19, r23
     35e:	64 e6       	ldi	r22, 0x64	; 100
     360:	70 e0       	ldi	r23, 0x00	; 0
     362:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     366:	7f 93       	push	r23
     368:	6f 93       	push	r22
     36a:	3f 93       	push	r19
     36c:	2f 93       	push	r18
     36e:	8e e3       	ldi	r24, 0x3E	; 62
     370:	91 e0       	ldi	r25, 0x01	; 1
     372:	9f 93       	push	r25
     374:	8f 93       	push	r24
     376:	1f 92       	push	r1
     378:	3f 92       	push	r3
     37a:	1f 93       	push	r17
     37c:	0f 93       	push	r16
     37e:	0e 94 2c 04 	call	0x858	; 0x858 <snprintf>
		LcdGotoXY (0, 2);
     382:	62 e0       	ldi	r22, 0x02	; 2
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <LcdGotoXY>
		LcdStr (FONT_1X, str);
     38a:	b8 01       	movw	r22, r16
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	0e 94 23 03 	call	0x646	; 0x646 <LcdStr>

		LcdUpdate ();
     392:	0e 94 36 03 	call	0x66c	; 0x66c <LcdUpdate>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     396:	3f ef       	ldi	r19, 0xFF	; 255
     398:	81 ee       	ldi	r24, 0xE1	; 225
     39a:	94 e0       	ldi	r25, 0x04	; 4
     39c:	31 50       	subi	r19, 0x01	; 1
     39e:	80 40       	sbci	r24, 0x00	; 0
     3a0:	90 40       	sbci	r25, 0x00	; 0
     3a2:	e1 f7       	brne	.-8      	; 0x39c <main+0x292>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x29c>
     3a6:	00 00       	nop
     3a8:	0f b6       	in	r0, 0x3f	; 63
     3aa:	f8 94       	cli
     3ac:	de bf       	out	0x3e, r29	; 62
     3ae:	0f be       	out	0x3f, r0	; 63
     3b0:	cd bf       	out	0x3d, r28	; 61
     3b2:	46 cf       	rjmp	.-372    	; 0x240 <main+0x136>

000003b4 <LcdSend>:
            LcdPixel( x1, y1, mode );
        }
    }

    UpdateLcd = TRUE;
}
     3b4:	28 98       	cbi	0x05, 0	; 5
     3b6:	61 30       	cpi	r22, 0x01	; 1
     3b8:	11 f4       	brne	.+4      	; 0x3be <LcdSend+0xa>
     3ba:	29 9a       	sbi	0x05, 1	; 5
     3bc:	01 c0       	rjmp	.+2      	; 0x3c0 <LcdSend+0xc>
     3be:	29 98       	cbi	0x05, 1	; 5
     3c0:	8e bd       	out	0x2e, r24	; 46
     3c2:	0d b4       	in	r0, 0x2d	; 45
     3c4:	07 fe       	sbrs	r0, 7
     3c6:	fd cf       	rjmp	.-6      	; 0x3c2 <LcdSend+0xe>
     3c8:	28 9a       	sbi	0x05, 0	; 5
     3ca:	29 98       	cbi	0x05, 1	; 5
     3cc:	08 95       	ret

000003ce <LcdClear>:
     3ce:	ec ea       	ldi	r30, 0xAC	; 172
     3d0:	f3 e0       	ldi	r31, 0x03	; 3
     3d2:	84 ea       	ldi	r24, 0xA4	; 164
     3d4:	95 e0       	ldi	r25, 0x05	; 5
     3d6:	11 92       	st	Z+, r1
     3d8:	e8 17       	cp	r30, r24
     3da:	f9 07       	cpc	r31, r25
     3dc:	e1 f7       	brne	.-8      	; 0x3d6 <LcdClear+0x8>
     3de:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <LoWaterMark+0x1>
     3e2:	10 92 a8 03 	sts	0x03A8, r1	; 0x8003a8 <LoWaterMark>
     3e6:	87 ef       	ldi	r24, 0xF7	; 247
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <__data_end+0x1>
     3ee:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <__data_end>
     3f2:	08 95       	ret

000003f4 <LcdGotoXY>:
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	9c 01       	movw	r18, r24
     3f8:	22 0f       	add	r18, r18
     3fa:	33 1f       	adc	r19, r19
     3fc:	82 0f       	add	r24, r18
     3fe:	93 1f       	adc	r25, r19
     400:	88 0f       	add	r24, r24
     402:	99 1f       	adc	r25, r25
     404:	24 e5       	ldi	r18, 0x54	; 84
     406:	62 9f       	mul	r22, r18
     408:	80 0d       	add	r24, r0
     40a:	91 1d       	adc	r25, r1
     40c:	11 24       	eor	r1, r1
     40e:	90 93 ab 03 	sts	0x03AB, r25	; 0x8003ab <LcdCacheIdx+0x1>
     412:	80 93 aa 03 	sts	0x03AA, r24	; 0x8003aa <LcdCacheIdx>
     416:	08 95       	ret

00000418 <LcdChr>:
     418:	0f 93       	push	r16
     41a:	1f 93       	push	r17
     41c:	cf 93       	push	r28
     41e:	df 93       	push	r29
     420:	20 91 aa 03 	lds	r18, 0x03AA	; 0x8003aa <LcdCacheIdx>
     424:	30 91 ab 03 	lds	r19, 0x03AB	; 0x8003ab <LcdCacheIdx+0x1>
     428:	40 91 a8 03 	lds	r20, 0x03A8	; 0x8003a8 <LoWaterMark>
     42c:	50 91 a9 03 	lds	r21, 0x03A9	; 0x8003a9 <LoWaterMark+0x1>
     430:	24 17       	cp	r18, r20
     432:	35 07       	cpc	r19, r21
     434:	24 f4       	brge	.+8      	; 0x43e <LcdChr+0x26>
     436:	30 93 a9 03 	sts	0x03A9, r19	; 0x8003a9 <LoWaterMark+0x1>
     43a:	20 93 a8 03 	sts	0x03A8, r18	; 0x8003a8 <LoWaterMark>
     43e:	60 32       	cpi	r22, 0x20	; 32
     440:	48 f1       	brcs	.+82     	; 0x494 <LcdChr+0x7c>
     442:	68 39       	cpi	r22, 0x98	; 152
     444:	08 f4       	brcc	.+2      	; 0x448 <LcdChr+0x30>
     446:	de c0       	rjmp	.+444    	; 0x604 <LcdChr+0x1ec>
     448:	60 3c       	cpi	r22, 0xC0	; 192
     44a:	31 f1       	breq	.+76     	; 0x498 <LcdChr+0x80>
     44c:	62 3c       	cpi	r22, 0xC2	; 194
     44e:	31 f1       	breq	.+76     	; 0x49c <LcdChr+0x84>
     450:	67 3c       	cpi	r22, 0xC7	; 199
     452:	31 f1       	breq	.+76     	; 0x4a0 <LcdChr+0x88>
     454:	69 3c       	cpi	r22, 0xC9	; 201
     456:	31 f1       	breq	.+76     	; 0x4a4 <LcdChr+0x8c>
     458:	6a 3c       	cpi	r22, 0xCA	; 202
     45a:	31 f1       	breq	.+76     	; 0x4a8 <LcdChr+0x90>
     45c:	6e 3c       	cpi	r22, 0xCE	; 206
     45e:	31 f1       	breq	.+76     	; 0x4ac <LcdChr+0x94>
     460:	60 3e       	cpi	r22, 0xE0	; 224
     462:	31 f1       	breq	.+76     	; 0x4b0 <LcdChr+0x98>
     464:	62 3e       	cpi	r22, 0xE2	; 226
     466:	31 f1       	breq	.+76     	; 0x4b4 <LcdChr+0x9c>
     468:	67 3e       	cpi	r22, 0xE7	; 231
     46a:	31 f1       	breq	.+76     	; 0x4b8 <LcdChr+0xa0>
     46c:	68 3e       	cpi	r22, 0xE8	; 232
     46e:	31 f1       	breq	.+76     	; 0x4bc <LcdChr+0xa4>
     470:	69 3e       	cpi	r22, 0xE9	; 233
     472:	31 f1       	breq	.+76     	; 0x4c0 <LcdChr+0xa8>
     474:	6a 3e       	cpi	r22, 0xEA	; 234
     476:	31 f1       	breq	.+76     	; 0x4c4 <LcdChr+0xac>
     478:	6b 3e       	cpi	r22, 0xEB	; 235
     47a:	31 f1       	breq	.+76     	; 0x4c8 <LcdChr+0xb0>
     47c:	6e 3e       	cpi	r22, 0xEE	; 238
     47e:	31 f1       	breq	.+76     	; 0x4cc <LcdChr+0xb4>
     480:	6f 3e       	cpi	r22, 0xEF	; 239
     482:	31 f1       	breq	.+76     	; 0x4d0 <LcdChr+0xb8>
     484:	64 3f       	cpi	r22, 0xF4	; 244
     486:	31 f1       	breq	.+76     	; 0x4d4 <LcdChr+0xbc>
     488:	69 3f       	cpi	r22, 0xF9	; 249
     48a:	31 f1       	breq	.+76     	; 0x4d8 <LcdChr+0xc0>
     48c:	6b 3f       	cpi	r22, 0xFB	; 251
     48e:	31 f1       	breq	.+76     	; 0x4dc <LcdChr+0xc4>
     490:	64 e9       	ldi	r22, 0x94	; 148
     492:	25 c0       	rjmp	.+74     	; 0x4de <LcdChr+0xc6>
     494:	64 e9       	ldi	r22, 0x94	; 148
     496:	23 c0       	rjmp	.+70     	; 0x4de <LcdChr+0xc6>
     498:	65 e8       	ldi	r22, 0x85	; 133
     49a:	21 c0       	rjmp	.+66     	; 0x4de <LcdChr+0xc6>
     49c:	63 e8       	ldi	r22, 0x83	; 131
     49e:	1f c0       	rjmp	.+62     	; 0x4de <LcdChr+0xc6>
     4a0:	60 e8       	ldi	r22, 0x80	; 128
     4a2:	1d c0       	rjmp	.+58     	; 0x4de <LcdChr+0xc6>
     4a4:	60 e9       	ldi	r22, 0x90	; 144
     4a6:	1b c0       	rjmp	.+54     	; 0x4de <LcdChr+0xc6>
     4a8:	68 e8       	ldi	r22, 0x88	; 136
     4aa:	19 c0       	rjmp	.+50     	; 0x4de <LcdChr+0xc6>
     4ac:	6c e8       	ldi	r22, 0x8C	; 140
     4ae:	17 c0       	rjmp	.+46     	; 0x4de <LcdChr+0xc6>
     4b0:	65 e8       	ldi	r22, 0x85	; 133
     4b2:	15 c0       	rjmp	.+42     	; 0x4de <LcdChr+0xc6>
     4b4:	63 e8       	ldi	r22, 0x83	; 131
     4b6:	13 c0       	rjmp	.+38     	; 0x4de <LcdChr+0xc6>
     4b8:	67 e8       	ldi	r22, 0x87	; 135
     4ba:	11 c0       	rjmp	.+34     	; 0x4de <LcdChr+0xc6>
     4bc:	6a e8       	ldi	r22, 0x8A	; 138
     4be:	0f c0       	rjmp	.+30     	; 0x4de <LcdChr+0xc6>
     4c0:	62 e8       	ldi	r22, 0x82	; 130
     4c2:	0d c0       	rjmp	.+26     	; 0x4de <LcdChr+0xc6>
     4c4:	68 e8       	ldi	r22, 0x88	; 136
     4c6:	0b c0       	rjmp	.+22     	; 0x4de <LcdChr+0xc6>
     4c8:	69 e8       	ldi	r22, 0x89	; 137
     4ca:	09 c0       	rjmp	.+18     	; 0x4de <LcdChr+0xc6>
     4cc:	6c e8       	ldi	r22, 0x8C	; 140
     4ce:	07 c0       	rjmp	.+14     	; 0x4de <LcdChr+0xc6>
     4d0:	6b e8       	ldi	r22, 0x8B	; 139
     4d2:	05 c0       	rjmp	.+10     	; 0x4de <LcdChr+0xc6>
     4d4:	63 e9       	ldi	r22, 0x93	; 147
     4d6:	03 c0       	rjmp	.+6      	; 0x4de <LcdChr+0xc6>
     4d8:	67 e9       	ldi	r22, 0x97	; 151
     4da:	01 c0       	rjmp	.+2      	; 0x4de <LcdChr+0xc6>
     4dc:	66 e9       	ldi	r22, 0x96	; 150
     4de:	81 30       	cpi	r24, 0x01	; 1
     4e0:	f1 f4       	brne	.+60     	; 0x51e <LcdChr+0x106>
     4e2:	70 e0       	ldi	r23, 0x00	; 0
     4e4:	fb 01       	movw	r30, r22
     4e6:	ee 0f       	add	r30, r30
     4e8:	ff 1f       	adc	r31, r31
     4ea:	ee 0f       	add	r30, r30
     4ec:	ff 1f       	adc	r31, r31
     4ee:	6e 0f       	add	r22, r30
     4f0:	7f 1f       	adc	r23, r31
     4f2:	fb 01       	movw	r30, r22
     4f4:	e2 55       	subi	r30, 0x52	; 82
     4f6:	ff 4f       	sbci	r31, 0xFF	; 255
     4f8:	d9 01       	movw	r26, r18
     4fa:	a4 55       	subi	r26, 0x54	; 84
     4fc:	bc 4f       	sbci	r27, 0xFC	; 252
     4fe:	a9 01       	movw	r20, r18
     500:	4f 54       	subi	r20, 0x4F	; 79
     502:	5c 4f       	sbci	r21, 0xFC	; 252
     504:	81 91       	ld	r24, Z+
     506:	88 0f       	add	r24, r24
     508:	8d 93       	st	X+, r24
     50a:	a4 17       	cp	r26, r20
     50c:	b5 07       	cpc	r27, r21
     50e:	d1 f7       	brne	.-12     	; 0x504 <LcdChr+0xec>
     510:	2b 5f       	subi	r18, 0xFB	; 251
     512:	3f 4f       	sbci	r19, 0xFF	; 255
     514:	30 93 ab 03 	sts	0x03AB, r19	; 0x8003ab <LcdCacheIdx+0x1>
     518:	20 93 aa 03 	sts	0x03AA, r18	; 0x8003aa <LcdCacheIdx>
     51c:	58 c0       	rjmp	.+176    	; 0x5ce <LcdChr+0x1b6>
     51e:	82 30       	cpi	r24, 0x02	; 2
     520:	09 f0       	breq	.+2      	; 0x524 <LcdChr+0x10c>
     522:	55 c0       	rjmp	.+170    	; 0x5ce <LcdChr+0x1b6>
     524:	c9 01       	movw	r24, r18
     526:	84 55       	subi	r24, 0x54	; 84
     528:	91 09       	sbc	r25, r1
     52a:	40 91 a8 03 	lds	r20, 0x03A8	; 0x8003a8 <LoWaterMark>
     52e:	50 91 a9 03 	lds	r21, 0x03A9	; 0x8003a9 <LoWaterMark+0x1>
     532:	84 17       	cp	r24, r20
     534:	95 07       	cpc	r25, r21
     536:	0c f0       	brlt	.+2      	; 0x53a <LcdChr+0x122>
     538:	69 c0       	rjmp	.+210    	; 0x60c <LcdChr+0x1f4>
     53a:	90 93 a9 03 	sts	0x03A9, r25	; 0x8003a9 <LoWaterMark+0x1>
     53e:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <LoWaterMark>
     542:	64 c0       	rjmp	.+200    	; 0x60c <LcdChr+0x1f4>
     544:	81 91       	ld	r24, Z+
     546:	88 0f       	add	r24, r24
     548:	98 2f       	mov	r25, r24
     54a:	92 70       	andi	r25, 0x02	; 2
     54c:	49 2f       	mov	r20, r25
     54e:	44 0f       	add	r20, r20
     550:	94 0f       	add	r25, r20
     552:	49 2f       	mov	r20, r25
     554:	44 0f       	add	r20, r20
     556:	98 2f       	mov	r25, r24
     558:	94 70       	andi	r25, 0x04	; 4
     55a:	59 2f       	mov	r21, r25
     55c:	55 0f       	add	r21, r21
     55e:	95 0f       	add	r25, r21
     560:	99 0f       	add	r25, r25
     562:	99 0f       	add	r25, r25
     564:	94 2b       	or	r25, r20
     566:	58 2f       	mov	r21, r24
     568:	58 70       	andi	r21, 0x08	; 8
     56a:	50 9f       	mul	r21, r16
     56c:	50 2d       	mov	r21, r0
     56e:	11 24       	eor	r1, r1
     570:	59 2b       	or	r21, r25
     572:	82 95       	swap	r24
     574:	8f 70       	andi	r24, 0x0F	; 15
     576:	48 2f       	mov	r20, r24
     578:	42 70       	andi	r20, 0x02	; 2
     57a:	14 2f       	mov	r17, r20
     57c:	11 0f       	add	r17, r17
     57e:	41 0f       	add	r20, r17
     580:	44 0f       	add	r20, r20
     582:	18 2f       	mov	r17, r24
     584:	11 70       	andi	r17, 0x01	; 1
     586:	91 2f       	mov	r25, r17
     588:	99 0f       	add	r25, r25
     58a:	19 0f       	add	r17, r25
     58c:	41 2b       	or	r20, r17
     58e:	98 2f       	mov	r25, r24
     590:	94 70       	andi	r25, 0x04	; 4
     592:	19 2f       	mov	r17, r25
     594:	11 0f       	add	r17, r17
     596:	91 0f       	add	r25, r17
     598:	99 0f       	add	r25, r25
     59a:	99 0f       	add	r25, r25
     59c:	49 2b       	or	r20, r25
     59e:	98 2f       	mov	r25, r24
     5a0:	98 70       	andi	r25, 0x08	; 8
     5a2:	90 9f       	mul	r25, r16
     5a4:	90 2d       	mov	r25, r0
     5a6:	11 24       	eor	r1, r1
     5a8:	84 2f       	mov	r24, r20
     5aa:	89 2b       	or	r24, r25
     5ac:	58 83       	st	Y, r21
     5ae:	59 83       	std	Y+1, r21	; 0x01
     5b0:	8c 93       	st	X, r24
     5b2:	11 96       	adiw	r26, 0x01	; 1
     5b4:	8c 93       	st	X, r24
     5b6:	11 97       	sbiw	r26, 0x01	; 1
     5b8:	22 96       	adiw	r28, 0x02	; 2
     5ba:	12 96       	adiw	r26, 0x02	; 2
     5bc:	a6 17       	cp	r26, r22
     5be:	b7 07       	cpc	r27, r23
     5c0:	09 f6       	brne	.-126    	; 0x544 <LcdChr+0x12c>
     5c2:	25 5f       	subi	r18, 0xF5	; 245
     5c4:	3f 4f       	sbci	r19, 0xFF	; 255
     5c6:	30 93 ab 03 	sts	0x03AB, r19	; 0x8003ab <LcdCacheIdx+0x1>
     5ca:	20 93 aa 03 	sts	0x03AA, r18	; 0x8003aa <LcdCacheIdx>
     5ce:	80 91 aa 03 	lds	r24, 0x03AA	; 0x8003aa <LcdCacheIdx>
     5d2:	90 91 ab 03 	lds	r25, 0x03AB	; 0x8003ab <LcdCacheIdx+0x1>
     5d6:	20 91 a6 03 	lds	r18, 0x03A6	; 0x8003a6 <__data_end>
     5da:	30 91 a7 03 	lds	r19, 0x03A7	; 0x8003a7 <__data_end+0x1>
     5de:	28 17       	cp	r18, r24
     5e0:	39 07       	cpc	r19, r25
     5e2:	24 f4       	brge	.+8      	; 0x5ec <LcdChr+0x1d4>
     5e4:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <__data_end+0x1>
     5e8:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <__data_end>
     5ec:	9c 01       	movw	r18, r24
     5ee:	2f 5f       	subi	r18, 0xFF	; 255
     5f0:	3f 4f       	sbci	r19, 0xFF	; 255
     5f2:	30 93 ab 03 	sts	0x03AB, r19	; 0x8003ab <LcdCacheIdx+0x1>
     5f6:	20 93 aa 03 	sts	0x03AA, r18	; 0x8003aa <LcdCacheIdx>
     5fa:	fc 01       	movw	r30, r24
     5fc:	e4 55       	subi	r30, 0x54	; 84
     5fe:	fc 4f       	sbci	r31, 0xFC	; 252
     600:	10 82       	st	Z, r1
     602:	1c c0       	rjmp	.+56     	; 0x63c <LcdChr+0x224>
     604:	81 30       	cpi	r24, 0x01	; 1
     606:	09 f0       	breq	.+2      	; 0x60a <LcdChr+0x1f2>
     608:	8a cf       	rjmp	.-236    	; 0x51e <LcdChr+0x106>
     60a:	6b cf       	rjmp	.-298    	; 0x4e2 <LcdChr+0xca>
     60c:	99 23       	and	r25, r25
     60e:	b4 f0       	brlt	.+44     	; 0x63c <LcdChr+0x224>
     610:	70 e0       	ldi	r23, 0x00	; 0
     612:	fb 01       	movw	r30, r22
     614:	ee 0f       	add	r30, r30
     616:	ff 1f       	adc	r31, r31
     618:	ee 0f       	add	r30, r30
     61a:	ff 1f       	adc	r31, r31
     61c:	6e 0f       	add	r22, r30
     61e:	7f 1f       	adc	r23, r31
     620:	fb 01       	movw	r30, r22
     622:	e2 55       	subi	r30, 0x52	; 82
     624:	ff 4f       	sbci	r31, 0xFF	; 255
     626:	e9 01       	movw	r28, r18
     628:	c8 5a       	subi	r28, 0xA8	; 168
     62a:	dc 4f       	sbci	r29, 0xFC	; 252
     62c:	d9 01       	movw	r26, r18
     62e:	a4 55       	subi	r26, 0x54	; 84
     630:	bc 4f       	sbci	r27, 0xFC	; 252
     632:	b9 01       	movw	r22, r18
     634:	6a 54       	subi	r22, 0x4A	; 74
     636:	7c 4f       	sbci	r23, 0xFC	; 252
     638:	08 e1       	ldi	r16, 0x18	; 24
     63a:	84 cf       	rjmp	.-248    	; 0x544 <LcdChr+0x12c>
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	1f 91       	pop	r17
     642:	0f 91       	pop	r16
     644:	08 95       	ret

00000646 <LcdStr>:
     646:	1f 93       	push	r17
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	eb 01       	movw	r28, r22
     64e:	68 81       	ld	r22, Y
     650:	66 23       	and	r22, r22
     652:	41 f0       	breq	.+16     	; 0x664 <LcdStr+0x1e>
     654:	18 2f       	mov	r17, r24
     656:	21 96       	adiw	r28, 0x01	; 1
     658:	81 2f       	mov	r24, r17
     65a:	0e 94 0c 02 	call	0x418	; 0x418 <LcdChr>
     65e:	69 91       	ld	r22, Y+
     660:	61 11       	cpse	r22, r1
     662:	fa cf       	rjmp	.-12     	; 0x658 <LcdStr+0x12>
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	1f 91       	pop	r17
     66a:	08 95       	ret

0000066c <LcdUpdate>:

  Return value :  None.

--------------------------------------------------------------------------------------------------*/
void LcdUpdate ( void )
{
     66c:	ef 92       	push	r14
     66e:	ff 92       	push	r15
     670:	0f 93       	push	r16
     672:	1f 93       	push	r17
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
    int i;

    if ( LoWaterMark < 0 )
     678:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <LoWaterMark>
     67c:	90 91 a9 03 	lds	r25, 0x03A9	; 0x8003a9 <LoWaterMark+0x1>
     680:	99 23       	and	r25, r25
     682:	2c f4       	brge	.+10     	; 0x68e <LcdUpdate+0x22>
        LoWaterMark = 0;
     684:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <LoWaterMark+0x1>
     688:	10 92 a8 03 	sts	0x03A8, r1	; 0x8003a8 <LoWaterMark>
     68c:	09 c0       	rjmp	.+18     	; 0x6a0 <LcdUpdate+0x34>
    else if ( LoWaterMark >= LCD_CACHE_SIZE )
     68e:	88 3f       	cpi	r24, 0xF8	; 248
     690:	91 40       	sbci	r25, 0x01	; 1
     692:	34 f0       	brlt	.+12     	; 0x6a0 <LcdUpdate+0x34>
        LoWaterMark = LCD_CACHE_SIZE - 1;
     694:	87 ef       	ldi	r24, 0xF7	; 247
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	90 93 a9 03 	sts	0x03A9, r25	; 0x8003a9 <LoWaterMark+0x1>
     69c:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <LoWaterMark>

    if ( HiWaterMark < 0 )
     6a0:	80 91 a6 03 	lds	r24, 0x03A6	; 0x8003a6 <__data_end>
     6a4:	90 91 a7 03 	lds	r25, 0x03A7	; 0x8003a7 <__data_end+0x1>
     6a8:	99 23       	and	r25, r25
     6aa:	2c f4       	brge	.+10     	; 0x6b6 <LcdUpdate+0x4a>
        HiWaterMark = 0;
     6ac:	10 92 a7 03 	sts	0x03A7, r1	; 0x8003a7 <__data_end+0x1>
     6b0:	10 92 a6 03 	sts	0x03A6, r1	; 0x8003a6 <__data_end>
     6b4:	09 c0       	rjmp	.+18     	; 0x6c8 <LcdUpdate+0x5c>
    else if ( HiWaterMark >= LCD_CACHE_SIZE )
     6b6:	88 3f       	cpi	r24, 0xF8	; 248
     6b8:	91 40       	sbci	r25, 0x01	; 1
     6ba:	34 f0       	brlt	.+12     	; 0x6c8 <LcdUpdate+0x5c>
        HiWaterMark = LCD_CACHE_SIZE - 1;
     6bc:	87 ef       	ldi	r24, 0xF7	; 247
     6be:	91 e0       	ldi	r25, 0x01	; 1
     6c0:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <__data_end+0x1>
     6c4:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <__data_end>

    //  Set base address according to LoWaterMark.
    LcdSend( 0x80 | (LoWaterMark % LCD_X_RES), LCD_CMD );
     6c8:	c0 91 a8 03 	lds	r28, 0x03A8	; 0x8003a8 <LoWaterMark>
     6cc:	d0 91 a9 03 	lds	r29, 0x03A9	; 0x8003a9 <LoWaterMark+0x1>
     6d0:	ce 01       	movw	r24, r28
     6d2:	64 e5       	ldi	r22, 0x54	; 84
     6d4:	70 e0       	ldi	r23, 0x00	; 0
     6d6:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__divmodhi4>
     6da:	16 2f       	mov	r17, r22
     6dc:	60 e0       	ldi	r22, 0x00	; 0
     6de:	80 68       	ori	r24, 0x80	; 128
     6e0:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>
    LcdSend( 0x40 | (LoWaterMark / LCD_X_RES), LCD_CMD );
     6e4:	60 e0       	ldi	r22, 0x00	; 0
     6e6:	81 2f       	mov	r24, r17
     6e8:	80 64       	ori	r24, 0x40	; 64
     6ea:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>

    //  Serialize the video buffer.
    for ( i = LoWaterMark; i <= HiWaterMark; i++ )
     6ee:	e0 90 a6 03 	lds	r14, 0x03A6	; 0x8003a6 <__data_end>
     6f2:	f0 90 a7 03 	lds	r15, 0x03A7	; 0x8003a7 <__data_end+0x1>
     6f6:	ec 16       	cp	r14, r28
     6f8:	fd 06       	cpc	r15, r29
     6fa:	6c f0       	brlt	.+26     	; 0x716 <LcdUpdate+0xaa>
     6fc:	8e 01       	movw	r16, r28
     6fe:	04 55       	subi	r16, 0x54	; 84
     700:	1c 4f       	sbci	r17, 0xFC	; 252
    {
        LcdSend( LcdCache[i], LCD_DATA );
     702:	61 e0       	ldi	r22, 0x01	; 1
     704:	f8 01       	movw	r30, r16
     706:	81 91       	ld	r24, Z+
     708:	8f 01       	movw	r16, r30
     70a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>
    //  Set base address according to LoWaterMark.
    LcdSend( 0x80 | (LoWaterMark % LCD_X_RES), LCD_CMD );
    LcdSend( 0x40 | (LoWaterMark / LCD_X_RES), LCD_CMD );

    //  Serialize the video buffer.
    for ( i = LoWaterMark; i <= HiWaterMark; i++ )
     70e:	21 96       	adiw	r28, 0x01	; 1
     710:	ec 16       	cp	r14, r28
     712:	fd 06       	cpc	r15, r29
     714:	b4 f7       	brge	.-20     	; 0x702 <LcdUpdate+0x96>
    {
        LcdSend( LcdCache[i], LCD_DATA );
    }

    //  Reset watermark pointers.
    LoWaterMark = LCD_CACHE_SIZE - 1;
     716:	87 ef       	ldi	r24, 0xF7	; 247
     718:	91 e0       	ldi	r25, 0x01	; 1
     71a:	90 93 a9 03 	sts	0x03A9, r25	; 0x8003a9 <LoWaterMark+0x1>
     71e:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <LoWaterMark>
    HiWaterMark = 0;
     722:	10 92 a7 03 	sts	0x03A7, r1	; 0x8003a7 <__data_end+0x1>
     726:	10 92 a6 03 	sts	0x03A6, r1	; 0x8003a6 <__data_end>

    UpdateLcd = FALSE;
}
     72a:	df 91       	pop	r29
     72c:	cf 91       	pop	r28
     72e:	1f 91       	pop	r17
     730:	0f 91       	pop	r16
     732:	ff 90       	pop	r15
     734:	ef 90       	pop	r14
     736:	08 95       	ret

00000738 <LcdInit>:
void LcdInit ( void )
{
 	static char FirstInit = TRUE;
	
    //  Pull-up on reset pin.
    PORTD |= LCD_RST_PIN;
     738:	5f 9a       	sbi	0x0b, 7	; 11
	//PORTB |= LCD_POWER;
	
    Delay();

    //  Toggle display reset pin.
    PORTD &= ~LCD_RST_PIN;
     73a:	5f 98       	cbi	0x0b, 7	; 11
    Delay();
    PORTD |= LCD_RST_PIN;
     73c:	5f 9a       	sbi	0x0b, 7	; 11

    //  Enable SPI port: No interrupt, MSBit first, Master mode, CPOL->0, CPHA->0, Clk/4
    //SPCR = 0x50;

    //  Disable LCD controller
    PORTB |= LCD_CE_PIN;
     73e:	28 9a       	sbi	0x05, 0	; 5

    LcdSend( 0x21, LCD_CMD );  // LCD Extended Commands.
     740:	60 e0       	ldi	r22, 0x00	; 0
     742:	81 e2       	ldi	r24, 0x21	; 33
     744:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>
    LcdSend( 0xC8, LCD_CMD );  // Set LCD Vop (Contrast).
     748:	60 e0       	ldi	r22, 0x00	; 0
     74a:	88 ec       	ldi	r24, 0xC8	; 200
     74c:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>
    LcdSend( 0x06, LCD_CMD );  // Set Temp coefficent.
     750:	60 e0       	ldi	r22, 0x00	; 0
     752:	86 e0       	ldi	r24, 0x06	; 6
     754:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>
    LcdSend( 0x13, LCD_CMD );  // LCD bias mode 1:48.
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	83 e1       	ldi	r24, 0x13	; 19
     75c:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>
    LcdSend( 0x20, LCD_CMD );  // LCD Standard Commands, Horizontal addressing mode.
     760:	60 e0       	ldi	r22, 0x00	; 0
     762:	80 e2       	ldi	r24, 0x20	; 32
     764:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>
    LcdSend( 0x0C, LCD_CMD );  // LCD in normal mode.
     768:	60 e0       	ldi	r22, 0x00	; 0
     76a:	8c e0       	ldi	r24, 0x0C	; 12
     76c:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LcdSend>

    if (FirstInit == TRUE)
     770:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <FirstInit.1999>
     774:	81 30       	cpi	r24, 0x01	; 1
     776:	79 f4       	brne	.+30     	; 0x796 <LcdInit+0x5e>
	   {
	   LoWaterMark = LCD_CACHE_SIZE;
     778:	88 ef       	ldi	r24, 0xF8	; 248
     77a:	91 e0       	ldi	r25, 0x01	; 1
     77c:	90 93 a9 03 	sts	0x03A9, r25	; 0x8003a9 <LoWaterMark+0x1>
     780:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <LoWaterMark>
       HiWaterMark = 0;
     784:	10 92 a7 03 	sts	0x03A7, r1	; 0x8003a7 <__data_end+0x1>
     788:	10 92 a6 03 	sts	0x03A6, r1	; 0x8003a6 <__data_end>
	   LcdClear();
     78c:	0e 94 e7 01 	call	0x3ce	; 0x3ce <LcdClear>
	   FirstInit = FALSE;
     790:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <FirstInit.1999>
     794:	0a c0       	rjmp	.+20     	; 0x7aa <LcdInit+0x72>
	   }
	else
	   {
	   LoWaterMark = 0;
     796:	10 92 a9 03 	sts	0x03A9, r1	; 0x8003a9 <LoWaterMark+0x1>
     79a:	10 92 a8 03 	sts	0x03A8, r1	; 0x8003a8 <LoWaterMark>
       HiWaterMark = LCD_CACHE_SIZE;
     79e:	88 ef       	ldi	r24, 0xF8	; 248
     7a0:	91 e0       	ldi	r25, 0x01	; 1
     7a2:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <__data_end+0x1>
     7a6:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <__data_end>
	   }
    LcdUpdate();
     7aa:	0e 94 36 03 	call	0x66c	; 0x66c <LcdUpdate>
     7ae:	08 95       	ret

000007b0 <__divmodhi4>:
     7b0:	97 fb       	bst	r25, 7
     7b2:	07 2e       	mov	r0, r23
     7b4:	16 f4       	brtc	.+4      	; 0x7ba <__divmodhi4+0xa>
     7b6:	00 94       	com	r0
     7b8:	07 d0       	rcall	.+14     	; 0x7c8 <__divmodhi4_neg1>
     7ba:	77 fd       	sbrc	r23, 7
     7bc:	09 d0       	rcall	.+18     	; 0x7d0 <__divmodhi4_neg2>
     7be:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__udivmodhi4>
     7c2:	07 fc       	sbrc	r0, 7
     7c4:	05 d0       	rcall	.+10     	; 0x7d0 <__divmodhi4_neg2>
     7c6:	3e f4       	brtc	.+14     	; 0x7d6 <__divmodhi4_exit>

000007c8 <__divmodhi4_neg1>:
     7c8:	90 95       	com	r25
     7ca:	81 95       	neg	r24
     7cc:	9f 4f       	sbci	r25, 0xFF	; 255
     7ce:	08 95       	ret

000007d0 <__divmodhi4_neg2>:
     7d0:	70 95       	com	r23
     7d2:	61 95       	neg	r22
     7d4:	7f 4f       	sbci	r23, 0xFF	; 255

000007d6 <__divmodhi4_exit>:
     7d6:	08 95       	ret

000007d8 <__udivmodhi4>:
     7d8:	aa 1b       	sub	r26, r26
     7da:	bb 1b       	sub	r27, r27
     7dc:	51 e1       	ldi	r21, 0x11	; 17
     7de:	07 c0       	rjmp	.+14     	; 0x7ee <__udivmodhi4_ep>

000007e0 <__udivmodhi4_loop>:
     7e0:	aa 1f       	adc	r26, r26
     7e2:	bb 1f       	adc	r27, r27
     7e4:	a6 17       	cp	r26, r22
     7e6:	b7 07       	cpc	r27, r23
     7e8:	10 f0       	brcs	.+4      	; 0x7ee <__udivmodhi4_ep>
     7ea:	a6 1b       	sub	r26, r22
     7ec:	b7 0b       	sbc	r27, r23

000007ee <__udivmodhi4_ep>:
     7ee:	88 1f       	adc	r24, r24
     7f0:	99 1f       	adc	r25, r25
     7f2:	5a 95       	dec	r21
     7f4:	a9 f7       	brne	.-22     	; 0x7e0 <__udivmodhi4_loop>
     7f6:	80 95       	com	r24
     7f8:	90 95       	com	r25
     7fa:	bc 01       	movw	r22, r24
     7fc:	cd 01       	movw	r24, r26
     7fe:	08 95       	ret

00000800 <printf>:
     800:	a0 e0       	ldi	r26, 0x00	; 0
     802:	b0 e0       	ldi	r27, 0x00	; 0
     804:	e6 e0       	ldi	r30, 0x06	; 6
     806:	f4 e0       	ldi	r31, 0x04	; 4
     808:	0c 94 18 0a 	jmp	0x1430	; 0x1430 <__prologue_saves__+0x20>
     80c:	ae 01       	movw	r20, r28
     80e:	4b 5f       	subi	r20, 0xFB	; 251
     810:	5f 4f       	sbci	r21, 0xFF	; 255
     812:	fa 01       	movw	r30, r20
     814:	61 91       	ld	r22, Z+
     816:	71 91       	ld	r23, Z+
     818:	af 01       	movw	r20, r30
     81a:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <__iob+0x2>
     81e:	90 91 a7 05 	lds	r25, 0x05A7	; 0x8005a7 <__iob+0x3>
     822:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <vfprintf>
     826:	e2 e0       	ldi	r30, 0x02	; 2
     828:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__epilogue_restores__+0x20>

0000082c <scanf>:
     82c:	a0 e0       	ldi	r26, 0x00	; 0
     82e:	b0 e0       	ldi	r27, 0x00	; 0
     830:	ec e1       	ldi	r30, 0x1C	; 28
     832:	f4 e0       	ldi	r31, 0x04	; 4
     834:	0c 94 18 0a 	jmp	0x1430	; 0x1430 <__prologue_saves__+0x20>
     838:	ae 01       	movw	r20, r28
     83a:	4b 5f       	subi	r20, 0xFB	; 251
     83c:	5f 4f       	sbci	r21, 0xFF	; 255
     83e:	fa 01       	movw	r30, r20
     840:	61 91       	ld	r22, Z+
     842:	71 91       	ld	r23, Z+
     844:	af 01       	movw	r20, r30
     846:	80 91 a4 05 	lds	r24, 0x05A4	; 0x8005a4 <__iob>
     84a:	90 91 a5 05 	lds	r25, 0x05A5	; 0x8005a5 <__iob+0x1>
     84e:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <vfscanf>
     852:	e2 e0       	ldi	r30, 0x02	; 2
     854:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__epilogue_restores__+0x20>

00000858 <snprintf>:
     858:	ae e0       	ldi	r26, 0x0E	; 14
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	e2 e3       	ldi	r30, 0x32	; 50
     85e:	f4 e0       	ldi	r31, 0x04	; 4
     860:	0c 94 16 0a 	jmp	0x142c	; 0x142c <__prologue_saves__+0x1c>
     864:	0d 89       	ldd	r16, Y+21	; 0x15
     866:	1e 89       	ldd	r17, Y+22	; 0x16
     868:	8f 89       	ldd	r24, Y+23	; 0x17
     86a:	98 8d       	ldd	r25, Y+24	; 0x18
     86c:	26 e0       	ldi	r18, 0x06	; 6
     86e:	2c 83       	std	Y+4, r18	; 0x04
     870:	1a 83       	std	Y+2, r17	; 0x02
     872:	09 83       	std	Y+1, r16	; 0x01
     874:	97 ff       	sbrs	r25, 7
     876:	02 c0       	rjmp	.+4      	; 0x87c <snprintf+0x24>
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	90 e8       	ldi	r25, 0x80	; 128
     87c:	01 97       	sbiw	r24, 0x01	; 1
     87e:	9e 83       	std	Y+6, r25	; 0x06
     880:	8d 83       	std	Y+5, r24	; 0x05
     882:	ae 01       	movw	r20, r28
     884:	45 5e       	subi	r20, 0xE5	; 229
     886:	5f 4f       	sbci	r21, 0xFF	; 255
     888:	69 8d       	ldd	r22, Y+25	; 0x19
     88a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     88c:	ce 01       	movw	r24, r28
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <vfprintf>
     894:	4d 81       	ldd	r20, Y+5	; 0x05
     896:	5e 81       	ldd	r21, Y+6	; 0x06
     898:	57 fd       	sbrc	r21, 7
     89a:	0a c0       	rjmp	.+20     	; 0x8b0 <snprintf+0x58>
     89c:	2f 81       	ldd	r18, Y+7	; 0x07
     89e:	38 85       	ldd	r19, Y+8	; 0x08
     8a0:	42 17       	cp	r20, r18
     8a2:	53 07       	cpc	r21, r19
     8a4:	0c f4       	brge	.+2      	; 0x8a8 <snprintf+0x50>
     8a6:	9a 01       	movw	r18, r20
     8a8:	f8 01       	movw	r30, r16
     8aa:	e2 0f       	add	r30, r18
     8ac:	f3 1f       	adc	r31, r19
     8ae:	10 82       	st	Z, r1
     8b0:	2e 96       	adiw	r28, 0x0e	; 14
     8b2:	e4 e0       	ldi	r30, 0x04	; 4
     8b4:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__epilogue_restores__+0x1c>

000008b8 <vfprintf>:
     8b8:	ab e0       	ldi	r26, 0x0B	; 11
     8ba:	b0 e0       	ldi	r27, 0x00	; 0
     8bc:	e2 e6       	ldi	r30, 0x62	; 98
     8be:	f4 e0       	ldi	r31, 0x04	; 4
     8c0:	0c 94 08 0a 	jmp	0x1410	; 0x1410 <__prologue_saves__>
     8c4:	6c 01       	movw	r12, r24
     8c6:	7b 01       	movw	r14, r22
     8c8:	8a 01       	movw	r16, r20
     8ca:	fc 01       	movw	r30, r24
     8cc:	17 82       	std	Z+7, r1	; 0x07
     8ce:	16 82       	std	Z+6, r1	; 0x06
     8d0:	83 81       	ldd	r24, Z+3	; 0x03
     8d2:	81 ff       	sbrs	r24, 1
     8d4:	cc c1       	rjmp	.+920    	; 0xc6e <__stack+0x36f>
     8d6:	ce 01       	movw	r24, r28
     8d8:	01 96       	adiw	r24, 0x01	; 1
     8da:	3c 01       	movw	r6, r24
     8dc:	f6 01       	movw	r30, r12
     8de:	93 81       	ldd	r25, Z+3	; 0x03
     8e0:	f7 01       	movw	r30, r14
     8e2:	93 fd       	sbrc	r25, 3
     8e4:	85 91       	lpm	r24, Z+
     8e6:	93 ff       	sbrs	r25, 3
     8e8:	81 91       	ld	r24, Z+
     8ea:	7f 01       	movw	r14, r30
     8ec:	88 23       	and	r24, r24
     8ee:	09 f4       	brne	.+2      	; 0x8f2 <vfprintf+0x3a>
     8f0:	ba c1       	rjmp	.+884    	; 0xc66 <__stack+0x367>
     8f2:	85 32       	cpi	r24, 0x25	; 37
     8f4:	39 f4       	brne	.+14     	; 0x904 <__stack+0x5>
     8f6:	93 fd       	sbrc	r25, 3
     8f8:	85 91       	lpm	r24, Z+
     8fa:	93 ff       	sbrs	r25, 3
     8fc:	81 91       	ld	r24, Z+
     8fe:	7f 01       	movw	r14, r30
     900:	85 32       	cpi	r24, 0x25	; 37
     902:	29 f4       	brne	.+10     	; 0x90e <__stack+0xf>
     904:	b6 01       	movw	r22, r12
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     90c:	e7 cf       	rjmp	.-50     	; 0x8dc <vfprintf+0x24>
     90e:	91 2c       	mov	r9, r1
     910:	21 2c       	mov	r2, r1
     912:	31 2c       	mov	r3, r1
     914:	ff e1       	ldi	r31, 0x1F	; 31
     916:	f3 15       	cp	r31, r3
     918:	d8 f0       	brcs	.+54     	; 0x950 <__stack+0x51>
     91a:	8b 32       	cpi	r24, 0x2B	; 43
     91c:	79 f0       	breq	.+30     	; 0x93c <__stack+0x3d>
     91e:	38 f4       	brcc	.+14     	; 0x92e <__stack+0x2f>
     920:	80 32       	cpi	r24, 0x20	; 32
     922:	79 f0       	breq	.+30     	; 0x942 <__stack+0x43>
     924:	83 32       	cpi	r24, 0x23	; 35
     926:	a1 f4       	brne	.+40     	; 0x950 <__stack+0x51>
     928:	23 2d       	mov	r18, r3
     92a:	20 61       	ori	r18, 0x10	; 16
     92c:	1d c0       	rjmp	.+58     	; 0x968 <__stack+0x69>
     92e:	8d 32       	cpi	r24, 0x2D	; 45
     930:	61 f0       	breq	.+24     	; 0x94a <__stack+0x4b>
     932:	80 33       	cpi	r24, 0x30	; 48
     934:	69 f4       	brne	.+26     	; 0x950 <__stack+0x51>
     936:	23 2d       	mov	r18, r3
     938:	21 60       	ori	r18, 0x01	; 1
     93a:	16 c0       	rjmp	.+44     	; 0x968 <__stack+0x69>
     93c:	83 2d       	mov	r24, r3
     93e:	82 60       	ori	r24, 0x02	; 2
     940:	38 2e       	mov	r3, r24
     942:	e3 2d       	mov	r30, r3
     944:	e4 60       	ori	r30, 0x04	; 4
     946:	3e 2e       	mov	r3, r30
     948:	2a c0       	rjmp	.+84     	; 0x99e <__stack+0x9f>
     94a:	f3 2d       	mov	r31, r3
     94c:	f8 60       	ori	r31, 0x08	; 8
     94e:	1d c0       	rjmp	.+58     	; 0x98a <__stack+0x8b>
     950:	37 fc       	sbrc	r3, 7
     952:	2d c0       	rjmp	.+90     	; 0x9ae <__stack+0xaf>
     954:	20 ed       	ldi	r18, 0xD0	; 208
     956:	28 0f       	add	r18, r24
     958:	2a 30       	cpi	r18, 0x0A	; 10
     95a:	40 f0       	brcs	.+16     	; 0x96c <__stack+0x6d>
     95c:	8e 32       	cpi	r24, 0x2E	; 46
     95e:	b9 f4       	brne	.+46     	; 0x98e <__stack+0x8f>
     960:	36 fc       	sbrc	r3, 6
     962:	81 c1       	rjmp	.+770    	; 0xc66 <__stack+0x367>
     964:	23 2d       	mov	r18, r3
     966:	20 64       	ori	r18, 0x40	; 64
     968:	32 2e       	mov	r3, r18
     96a:	19 c0       	rjmp	.+50     	; 0x99e <__stack+0x9f>
     96c:	36 fe       	sbrs	r3, 6
     96e:	06 c0       	rjmp	.+12     	; 0x97c <__stack+0x7d>
     970:	8a e0       	ldi	r24, 0x0A	; 10
     972:	98 9e       	mul	r9, r24
     974:	20 0d       	add	r18, r0
     976:	11 24       	eor	r1, r1
     978:	92 2e       	mov	r9, r18
     97a:	11 c0       	rjmp	.+34     	; 0x99e <__stack+0x9f>
     97c:	ea e0       	ldi	r30, 0x0A	; 10
     97e:	2e 9e       	mul	r2, r30
     980:	20 0d       	add	r18, r0
     982:	11 24       	eor	r1, r1
     984:	22 2e       	mov	r2, r18
     986:	f3 2d       	mov	r31, r3
     988:	f0 62       	ori	r31, 0x20	; 32
     98a:	3f 2e       	mov	r3, r31
     98c:	08 c0       	rjmp	.+16     	; 0x99e <__stack+0x9f>
     98e:	8c 36       	cpi	r24, 0x6C	; 108
     990:	21 f4       	brne	.+8      	; 0x99a <__stack+0x9b>
     992:	83 2d       	mov	r24, r3
     994:	80 68       	ori	r24, 0x80	; 128
     996:	38 2e       	mov	r3, r24
     998:	02 c0       	rjmp	.+4      	; 0x99e <__stack+0x9f>
     99a:	88 36       	cpi	r24, 0x68	; 104
     99c:	41 f4       	brne	.+16     	; 0x9ae <__stack+0xaf>
     99e:	f7 01       	movw	r30, r14
     9a0:	93 fd       	sbrc	r25, 3
     9a2:	85 91       	lpm	r24, Z+
     9a4:	93 ff       	sbrs	r25, 3
     9a6:	81 91       	ld	r24, Z+
     9a8:	7f 01       	movw	r14, r30
     9aa:	81 11       	cpse	r24, r1
     9ac:	b3 cf       	rjmp	.-154    	; 0x914 <__stack+0x15>
     9ae:	98 2f       	mov	r25, r24
     9b0:	9f 7d       	andi	r25, 0xDF	; 223
     9b2:	95 54       	subi	r25, 0x45	; 69
     9b4:	93 30       	cpi	r25, 0x03	; 3
     9b6:	28 f4       	brcc	.+10     	; 0x9c2 <__stack+0xc3>
     9b8:	0c 5f       	subi	r16, 0xFC	; 252
     9ba:	1f 4f       	sbci	r17, 0xFF	; 255
     9bc:	9f e3       	ldi	r25, 0x3F	; 63
     9be:	99 83       	std	Y+1, r25	; 0x01
     9c0:	0d c0       	rjmp	.+26     	; 0x9dc <__stack+0xdd>
     9c2:	83 36       	cpi	r24, 0x63	; 99
     9c4:	31 f0       	breq	.+12     	; 0x9d2 <__stack+0xd3>
     9c6:	83 37       	cpi	r24, 0x73	; 115
     9c8:	71 f0       	breq	.+28     	; 0x9e6 <__stack+0xe7>
     9ca:	83 35       	cpi	r24, 0x53	; 83
     9cc:	09 f0       	breq	.+2      	; 0x9d0 <__stack+0xd1>
     9ce:	59 c0       	rjmp	.+178    	; 0xa82 <__stack+0x183>
     9d0:	21 c0       	rjmp	.+66     	; 0xa14 <__stack+0x115>
     9d2:	f8 01       	movw	r30, r16
     9d4:	80 81       	ld	r24, Z
     9d6:	89 83       	std	Y+1, r24	; 0x01
     9d8:	0e 5f       	subi	r16, 0xFE	; 254
     9da:	1f 4f       	sbci	r17, 0xFF	; 255
     9dc:	88 24       	eor	r8, r8
     9de:	83 94       	inc	r8
     9e0:	91 2c       	mov	r9, r1
     9e2:	53 01       	movw	r10, r6
     9e4:	13 c0       	rjmp	.+38     	; 0xa0c <__stack+0x10d>
     9e6:	28 01       	movw	r4, r16
     9e8:	f2 e0       	ldi	r31, 0x02	; 2
     9ea:	4f 0e       	add	r4, r31
     9ec:	51 1c       	adc	r5, r1
     9ee:	f8 01       	movw	r30, r16
     9f0:	a0 80       	ld	r10, Z
     9f2:	b1 80       	ldd	r11, Z+1	; 0x01
     9f4:	36 fe       	sbrs	r3, 6
     9f6:	03 c0       	rjmp	.+6      	; 0x9fe <__stack+0xff>
     9f8:	69 2d       	mov	r22, r9
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	02 c0       	rjmp	.+4      	; 0xa02 <__stack+0x103>
     9fe:	6f ef       	ldi	r22, 0xFF	; 255
     a00:	7f ef       	ldi	r23, 0xFF	; 255
     a02:	c5 01       	movw	r24, r10
     a04:	0e 94 09 09 	call	0x1212	; 0x1212 <strnlen>
     a08:	4c 01       	movw	r8, r24
     a0a:	82 01       	movw	r16, r4
     a0c:	f3 2d       	mov	r31, r3
     a0e:	ff 77       	andi	r31, 0x7F	; 127
     a10:	3f 2e       	mov	r3, r31
     a12:	16 c0       	rjmp	.+44     	; 0xa40 <__stack+0x141>
     a14:	28 01       	movw	r4, r16
     a16:	22 e0       	ldi	r18, 0x02	; 2
     a18:	42 0e       	add	r4, r18
     a1a:	51 1c       	adc	r5, r1
     a1c:	f8 01       	movw	r30, r16
     a1e:	a0 80       	ld	r10, Z
     a20:	b1 80       	ldd	r11, Z+1	; 0x01
     a22:	36 fe       	sbrs	r3, 6
     a24:	03 c0       	rjmp	.+6      	; 0xa2c <__stack+0x12d>
     a26:	69 2d       	mov	r22, r9
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x131>
     a2c:	6f ef       	ldi	r22, 0xFF	; 255
     a2e:	7f ef       	ldi	r23, 0xFF	; 255
     a30:	c5 01       	movw	r24, r10
     a32:	0e 94 fe 08 	call	0x11fc	; 0x11fc <strnlen_P>
     a36:	4c 01       	movw	r8, r24
     a38:	f3 2d       	mov	r31, r3
     a3a:	f0 68       	ori	r31, 0x80	; 128
     a3c:	3f 2e       	mov	r3, r31
     a3e:	82 01       	movw	r16, r4
     a40:	33 fc       	sbrc	r3, 3
     a42:	1b c0       	rjmp	.+54     	; 0xa7a <__stack+0x17b>
     a44:	82 2d       	mov	r24, r2
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	88 16       	cp	r8, r24
     a4a:	99 06       	cpc	r9, r25
     a4c:	b0 f4       	brcc	.+44     	; 0xa7a <__stack+0x17b>
     a4e:	b6 01       	movw	r22, r12
     a50:	80 e2       	ldi	r24, 0x20	; 32
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     a58:	2a 94       	dec	r2
     a5a:	f4 cf       	rjmp	.-24     	; 0xa44 <__stack+0x145>
     a5c:	f5 01       	movw	r30, r10
     a5e:	37 fc       	sbrc	r3, 7
     a60:	85 91       	lpm	r24, Z+
     a62:	37 fe       	sbrs	r3, 7
     a64:	81 91       	ld	r24, Z+
     a66:	5f 01       	movw	r10, r30
     a68:	b6 01       	movw	r22, r12
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     a70:	21 10       	cpse	r2, r1
     a72:	2a 94       	dec	r2
     a74:	21 e0       	ldi	r18, 0x01	; 1
     a76:	82 1a       	sub	r8, r18
     a78:	91 08       	sbc	r9, r1
     a7a:	81 14       	cp	r8, r1
     a7c:	91 04       	cpc	r9, r1
     a7e:	71 f7       	brne	.-36     	; 0xa5c <__stack+0x15d>
     a80:	e8 c0       	rjmp	.+464    	; 0xc52 <__stack+0x353>
     a82:	84 36       	cpi	r24, 0x64	; 100
     a84:	11 f0       	breq	.+4      	; 0xa8a <__stack+0x18b>
     a86:	89 36       	cpi	r24, 0x69	; 105
     a88:	41 f5       	brne	.+80     	; 0xada <__stack+0x1db>
     a8a:	f8 01       	movw	r30, r16
     a8c:	37 fe       	sbrs	r3, 7
     a8e:	07 c0       	rjmp	.+14     	; 0xa9e <__stack+0x19f>
     a90:	60 81       	ld	r22, Z
     a92:	71 81       	ldd	r23, Z+1	; 0x01
     a94:	82 81       	ldd	r24, Z+2	; 0x02
     a96:	93 81       	ldd	r25, Z+3	; 0x03
     a98:	0c 5f       	subi	r16, 0xFC	; 252
     a9a:	1f 4f       	sbci	r17, 0xFF	; 255
     a9c:	08 c0       	rjmp	.+16     	; 0xaae <__stack+0x1af>
     a9e:	60 81       	ld	r22, Z
     aa0:	71 81       	ldd	r23, Z+1	; 0x01
     aa2:	07 2e       	mov	r0, r23
     aa4:	00 0c       	add	r0, r0
     aa6:	88 0b       	sbc	r24, r24
     aa8:	99 0b       	sbc	r25, r25
     aaa:	0e 5f       	subi	r16, 0xFE	; 254
     aac:	1f 4f       	sbci	r17, 0xFF	; 255
     aae:	f3 2d       	mov	r31, r3
     ab0:	ff 76       	andi	r31, 0x6F	; 111
     ab2:	3f 2e       	mov	r3, r31
     ab4:	97 ff       	sbrs	r25, 7
     ab6:	09 c0       	rjmp	.+18     	; 0xaca <__stack+0x1cb>
     ab8:	90 95       	com	r25
     aba:	80 95       	com	r24
     abc:	70 95       	com	r23
     abe:	61 95       	neg	r22
     ac0:	7f 4f       	sbci	r23, 0xFF	; 255
     ac2:	8f 4f       	sbci	r24, 0xFF	; 255
     ac4:	9f 4f       	sbci	r25, 0xFF	; 255
     ac6:	f0 68       	ori	r31, 0x80	; 128
     ac8:	3f 2e       	mov	r3, r31
     aca:	2a e0       	ldi	r18, 0x0A	; 10
     acc:	30 e0       	ldi	r19, 0x00	; 0
     ace:	a3 01       	movw	r20, r6
     ad0:	0e 94 a7 09 	call	0x134e	; 0x134e <__ultoa_invert>
     ad4:	88 2e       	mov	r8, r24
     ad6:	86 18       	sub	r8, r6
     ad8:	45 c0       	rjmp	.+138    	; 0xb64 <__stack+0x265>
     ada:	85 37       	cpi	r24, 0x75	; 117
     adc:	31 f4       	brne	.+12     	; 0xaea <__stack+0x1eb>
     ade:	23 2d       	mov	r18, r3
     ae0:	2f 7e       	andi	r18, 0xEF	; 239
     ae2:	b2 2e       	mov	r11, r18
     ae4:	2a e0       	ldi	r18, 0x0A	; 10
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	25 c0       	rjmp	.+74     	; 0xb34 <__stack+0x235>
     aea:	93 2d       	mov	r25, r3
     aec:	99 7f       	andi	r25, 0xF9	; 249
     aee:	b9 2e       	mov	r11, r25
     af0:	8f 36       	cpi	r24, 0x6F	; 111
     af2:	c1 f0       	breq	.+48     	; 0xb24 <__stack+0x225>
     af4:	18 f4       	brcc	.+6      	; 0xafc <__stack+0x1fd>
     af6:	88 35       	cpi	r24, 0x58	; 88
     af8:	79 f0       	breq	.+30     	; 0xb18 <__stack+0x219>
     afa:	b5 c0       	rjmp	.+362    	; 0xc66 <__stack+0x367>
     afc:	80 37       	cpi	r24, 0x70	; 112
     afe:	19 f0       	breq	.+6      	; 0xb06 <__stack+0x207>
     b00:	88 37       	cpi	r24, 0x78	; 120
     b02:	21 f0       	breq	.+8      	; 0xb0c <__stack+0x20d>
     b04:	b0 c0       	rjmp	.+352    	; 0xc66 <__stack+0x367>
     b06:	e9 2f       	mov	r30, r25
     b08:	e0 61       	ori	r30, 0x10	; 16
     b0a:	be 2e       	mov	r11, r30
     b0c:	b4 fe       	sbrs	r11, 4
     b0e:	0d c0       	rjmp	.+26     	; 0xb2a <__stack+0x22b>
     b10:	fb 2d       	mov	r31, r11
     b12:	f4 60       	ori	r31, 0x04	; 4
     b14:	bf 2e       	mov	r11, r31
     b16:	09 c0       	rjmp	.+18     	; 0xb2a <__stack+0x22b>
     b18:	34 fe       	sbrs	r3, 4
     b1a:	0a c0       	rjmp	.+20     	; 0xb30 <__stack+0x231>
     b1c:	29 2f       	mov	r18, r25
     b1e:	26 60       	ori	r18, 0x06	; 6
     b20:	b2 2e       	mov	r11, r18
     b22:	06 c0       	rjmp	.+12     	; 0xb30 <__stack+0x231>
     b24:	28 e0       	ldi	r18, 0x08	; 8
     b26:	30 e0       	ldi	r19, 0x00	; 0
     b28:	05 c0       	rjmp	.+10     	; 0xb34 <__stack+0x235>
     b2a:	20 e1       	ldi	r18, 0x10	; 16
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	02 c0       	rjmp	.+4      	; 0xb34 <__stack+0x235>
     b30:	20 e1       	ldi	r18, 0x10	; 16
     b32:	32 e0       	ldi	r19, 0x02	; 2
     b34:	f8 01       	movw	r30, r16
     b36:	b7 fe       	sbrs	r11, 7
     b38:	07 c0       	rjmp	.+14     	; 0xb48 <__stack+0x249>
     b3a:	60 81       	ld	r22, Z
     b3c:	71 81       	ldd	r23, Z+1	; 0x01
     b3e:	82 81       	ldd	r24, Z+2	; 0x02
     b40:	93 81       	ldd	r25, Z+3	; 0x03
     b42:	0c 5f       	subi	r16, 0xFC	; 252
     b44:	1f 4f       	sbci	r17, 0xFF	; 255
     b46:	06 c0       	rjmp	.+12     	; 0xb54 <__stack+0x255>
     b48:	60 81       	ld	r22, Z
     b4a:	71 81       	ldd	r23, Z+1	; 0x01
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	0e 5f       	subi	r16, 0xFE	; 254
     b52:	1f 4f       	sbci	r17, 0xFF	; 255
     b54:	a3 01       	movw	r20, r6
     b56:	0e 94 a7 09 	call	0x134e	; 0x134e <__ultoa_invert>
     b5a:	88 2e       	mov	r8, r24
     b5c:	86 18       	sub	r8, r6
     b5e:	fb 2d       	mov	r31, r11
     b60:	ff 77       	andi	r31, 0x7F	; 127
     b62:	3f 2e       	mov	r3, r31
     b64:	36 fe       	sbrs	r3, 6
     b66:	0d c0       	rjmp	.+26     	; 0xb82 <__stack+0x283>
     b68:	23 2d       	mov	r18, r3
     b6a:	2e 7f       	andi	r18, 0xFE	; 254
     b6c:	a2 2e       	mov	r10, r18
     b6e:	89 14       	cp	r8, r9
     b70:	58 f4       	brcc	.+22     	; 0xb88 <__stack+0x289>
     b72:	34 fe       	sbrs	r3, 4
     b74:	0b c0       	rjmp	.+22     	; 0xb8c <__stack+0x28d>
     b76:	32 fc       	sbrc	r3, 2
     b78:	09 c0       	rjmp	.+18     	; 0xb8c <__stack+0x28d>
     b7a:	83 2d       	mov	r24, r3
     b7c:	8e 7e       	andi	r24, 0xEE	; 238
     b7e:	a8 2e       	mov	r10, r24
     b80:	05 c0       	rjmp	.+10     	; 0xb8c <__stack+0x28d>
     b82:	b8 2c       	mov	r11, r8
     b84:	a3 2c       	mov	r10, r3
     b86:	03 c0       	rjmp	.+6      	; 0xb8e <__stack+0x28f>
     b88:	b8 2c       	mov	r11, r8
     b8a:	01 c0       	rjmp	.+2      	; 0xb8e <__stack+0x28f>
     b8c:	b9 2c       	mov	r11, r9
     b8e:	a4 fe       	sbrs	r10, 4
     b90:	0f c0       	rjmp	.+30     	; 0xbb0 <__stack+0x2b1>
     b92:	fe 01       	movw	r30, r28
     b94:	e8 0d       	add	r30, r8
     b96:	f1 1d       	adc	r31, r1
     b98:	80 81       	ld	r24, Z
     b9a:	80 33       	cpi	r24, 0x30	; 48
     b9c:	21 f4       	brne	.+8      	; 0xba6 <__stack+0x2a7>
     b9e:	9a 2d       	mov	r25, r10
     ba0:	99 7e       	andi	r25, 0xE9	; 233
     ba2:	a9 2e       	mov	r10, r25
     ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <__stack+0x2b9>
     ba6:	a2 fe       	sbrs	r10, 2
     ba8:	06 c0       	rjmp	.+12     	; 0xbb6 <__stack+0x2b7>
     baa:	b3 94       	inc	r11
     bac:	b3 94       	inc	r11
     bae:	04 c0       	rjmp	.+8      	; 0xbb8 <__stack+0x2b9>
     bb0:	8a 2d       	mov	r24, r10
     bb2:	86 78       	andi	r24, 0x86	; 134
     bb4:	09 f0       	breq	.+2      	; 0xbb8 <__stack+0x2b9>
     bb6:	b3 94       	inc	r11
     bb8:	a3 fc       	sbrc	r10, 3
     bba:	11 c0       	rjmp	.+34     	; 0xbde <__stack+0x2df>
     bbc:	a0 fe       	sbrs	r10, 0
     bbe:	06 c0       	rjmp	.+12     	; 0xbcc <__stack+0x2cd>
     bc0:	b2 14       	cp	r11, r2
     bc2:	88 f4       	brcc	.+34     	; 0xbe6 <__stack+0x2e7>
     bc4:	28 0c       	add	r2, r8
     bc6:	92 2c       	mov	r9, r2
     bc8:	9b 18       	sub	r9, r11
     bca:	0e c0       	rjmp	.+28     	; 0xbe8 <__stack+0x2e9>
     bcc:	b2 14       	cp	r11, r2
     bce:	60 f4       	brcc	.+24     	; 0xbe8 <__stack+0x2e9>
     bd0:	b6 01       	movw	r22, r12
     bd2:	80 e2       	ldi	r24, 0x20	; 32
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     bda:	b3 94       	inc	r11
     bdc:	f7 cf       	rjmp	.-18     	; 0xbcc <__stack+0x2cd>
     bde:	b2 14       	cp	r11, r2
     be0:	18 f4       	brcc	.+6      	; 0xbe8 <__stack+0x2e9>
     be2:	2b 18       	sub	r2, r11
     be4:	02 c0       	rjmp	.+4      	; 0xbea <__stack+0x2eb>
     be6:	98 2c       	mov	r9, r8
     be8:	21 2c       	mov	r2, r1
     bea:	a4 fe       	sbrs	r10, 4
     bec:	10 c0       	rjmp	.+32     	; 0xc0e <__stack+0x30f>
     bee:	b6 01       	movw	r22, r12
     bf0:	80 e3       	ldi	r24, 0x30	; 48
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     bf8:	a2 fe       	sbrs	r10, 2
     bfa:	17 c0       	rjmp	.+46     	; 0xc2a <__stack+0x32b>
     bfc:	a1 fc       	sbrc	r10, 1
     bfe:	03 c0       	rjmp	.+6      	; 0xc06 <__stack+0x307>
     c00:	88 e7       	ldi	r24, 0x78	; 120
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <__stack+0x30b>
     c06:	88 e5       	ldi	r24, 0x58	; 88
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	b6 01       	movw	r22, r12
     c0c:	0c c0       	rjmp	.+24     	; 0xc26 <__stack+0x327>
     c0e:	8a 2d       	mov	r24, r10
     c10:	86 78       	andi	r24, 0x86	; 134
     c12:	59 f0       	breq	.+22     	; 0xc2a <__stack+0x32b>
     c14:	a1 fe       	sbrs	r10, 1
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <__stack+0x31d>
     c18:	8b e2       	ldi	r24, 0x2B	; 43
     c1a:	01 c0       	rjmp	.+2      	; 0xc1e <__stack+0x31f>
     c1c:	80 e2       	ldi	r24, 0x20	; 32
     c1e:	a7 fc       	sbrc	r10, 7
     c20:	8d e2       	ldi	r24, 0x2D	; 45
     c22:	b6 01       	movw	r22, r12
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     c2a:	89 14       	cp	r8, r9
     c2c:	38 f4       	brcc	.+14     	; 0xc3c <__stack+0x33d>
     c2e:	b6 01       	movw	r22, r12
     c30:	80 e3       	ldi	r24, 0x30	; 48
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     c38:	9a 94       	dec	r9
     c3a:	f7 cf       	rjmp	.-18     	; 0xc2a <__stack+0x32b>
     c3c:	8a 94       	dec	r8
     c3e:	f3 01       	movw	r30, r6
     c40:	e8 0d       	add	r30, r8
     c42:	f1 1d       	adc	r31, r1
     c44:	80 81       	ld	r24, Z
     c46:	b6 01       	movw	r22, r12
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     c4e:	81 10       	cpse	r8, r1
     c50:	f5 cf       	rjmp	.-22     	; 0xc3c <__stack+0x33d>
     c52:	22 20       	and	r2, r2
     c54:	09 f4       	brne	.+2      	; 0xc58 <__stack+0x359>
     c56:	42 ce       	rjmp	.-892    	; 0x8dc <vfprintf+0x24>
     c58:	b6 01       	movw	r22, r12
     c5a:	80 e2       	ldi	r24, 0x20	; 32
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	0e 94 52 09 	call	0x12a4	; 0x12a4 <fputc>
     c62:	2a 94       	dec	r2
     c64:	f6 cf       	rjmp	.-20     	; 0xc52 <__stack+0x353>
     c66:	f6 01       	movw	r30, r12
     c68:	86 81       	ldd	r24, Z+6	; 0x06
     c6a:	97 81       	ldd	r25, Z+7	; 0x07
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <__stack+0x373>
     c6e:	8f ef       	ldi	r24, 0xFF	; 255
     c70:	9f ef       	ldi	r25, 0xFF	; 255
     c72:	2b 96       	adiw	r28, 0x0b	; 11
     c74:	e2 e1       	ldi	r30, 0x12	; 18
     c76:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__epilogue_restores__>

00000c7a <putval>:
     c7a:	20 fd       	sbrc	r18, 0
     c7c:	09 c0       	rjmp	.+18     	; 0xc90 <putval+0x16>
     c7e:	fc 01       	movw	r30, r24
     c80:	23 fd       	sbrc	r18, 3
     c82:	05 c0       	rjmp	.+10     	; 0xc8e <putval+0x14>
     c84:	22 ff       	sbrs	r18, 2
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <putval+0x12>
     c88:	73 83       	std	Z+3, r23	; 0x03
     c8a:	62 83       	std	Z+2, r22	; 0x02
     c8c:	51 83       	std	Z+1, r21	; 0x01
     c8e:	40 83       	st	Z, r20
     c90:	08 95       	ret

00000c92 <mulacc>:
     c92:	44 fd       	sbrc	r20, 4
     c94:	17 c0       	rjmp	.+46     	; 0xcc4 <mulacc+0x32>
     c96:	46 fd       	sbrc	r20, 6
     c98:	17 c0       	rjmp	.+46     	; 0xcc8 <mulacc+0x36>
     c9a:	ab 01       	movw	r20, r22
     c9c:	bc 01       	movw	r22, r24
     c9e:	da 01       	movw	r26, r20
     ca0:	fb 01       	movw	r30, r22
     ca2:	aa 0f       	add	r26, r26
     ca4:	bb 1f       	adc	r27, r27
     ca6:	ee 1f       	adc	r30, r30
     ca8:	ff 1f       	adc	r31, r31
     caa:	10 94       	com	r1
     cac:	d1 f7       	brne	.-12     	; 0xca2 <mulacc+0x10>
     cae:	4a 0f       	add	r20, r26
     cb0:	5b 1f       	adc	r21, r27
     cb2:	6e 1f       	adc	r22, r30
     cb4:	7f 1f       	adc	r23, r31
     cb6:	cb 01       	movw	r24, r22
     cb8:	ba 01       	movw	r22, r20
     cba:	66 0f       	add	r22, r22
     cbc:	77 1f       	adc	r23, r23
     cbe:	88 1f       	adc	r24, r24
     cc0:	99 1f       	adc	r25, r25
     cc2:	09 c0       	rjmp	.+18     	; 0xcd6 <mulacc+0x44>
     cc4:	33 e0       	ldi	r19, 0x03	; 3
     cc6:	01 c0       	rjmp	.+2      	; 0xcca <mulacc+0x38>
     cc8:	34 e0       	ldi	r19, 0x04	; 4
     cca:	66 0f       	add	r22, r22
     ccc:	77 1f       	adc	r23, r23
     cce:	88 1f       	adc	r24, r24
     cd0:	99 1f       	adc	r25, r25
     cd2:	31 50       	subi	r19, 0x01	; 1
     cd4:	d1 f7       	brne	.-12     	; 0xcca <mulacc+0x38>
     cd6:	62 0f       	add	r22, r18
     cd8:	71 1d       	adc	r23, r1
     cda:	81 1d       	adc	r24, r1
     cdc:	91 1d       	adc	r25, r1
     cde:	08 95       	ret

00000ce0 <skip_spaces>:
     ce0:	0f 93       	push	r16
     ce2:	1f 93       	push	r17
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	8c 01       	movw	r16, r24
     cea:	c8 01       	movw	r24, r16
     cec:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
     cf0:	ec 01       	movw	r28, r24
     cf2:	97 fd       	sbrc	r25, 7
     cf4:	08 c0       	rjmp	.+16     	; 0xd06 <skip_spaces+0x26>
     cf6:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <isspace>
     cfa:	89 2b       	or	r24, r25
     cfc:	b1 f7       	brne	.-20     	; 0xcea <skip_spaces+0xa>
     cfe:	b8 01       	movw	r22, r16
     d00:	ce 01       	movw	r24, r28
     d02:	0e 94 8e 09 	call	0x131c	; 0x131c <ungetc>
     d06:	ce 01       	movw	r24, r28
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
     d0c:	1f 91       	pop	r17
     d0e:	0f 91       	pop	r16
     d10:	08 95       	ret

00000d12 <conv_int>:
     d12:	8f 92       	push	r8
     d14:	9f 92       	push	r9
     d16:	af 92       	push	r10
     d18:	bf 92       	push	r11
     d1a:	ef 92       	push	r14
     d1c:	ff 92       	push	r15
     d1e:	0f 93       	push	r16
     d20:	1f 93       	push	r17
     d22:	cf 93       	push	r28
     d24:	df 93       	push	r29
     d26:	8c 01       	movw	r16, r24
     d28:	d6 2f       	mov	r29, r22
     d2a:	7a 01       	movw	r14, r20
     d2c:	b2 2e       	mov	r11, r18
     d2e:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
     d32:	9c 01       	movw	r18, r24
     d34:	33 27       	eor	r19, r19
     d36:	2b 32       	cpi	r18, 0x2B	; 43
     d38:	31 05       	cpc	r19, r1
     d3a:	31 f0       	breq	.+12     	; 0xd48 <conv_int+0x36>
     d3c:	2d 32       	cpi	r18, 0x2D	; 45
     d3e:	31 05       	cpc	r19, r1
     d40:	61 f4       	brne	.+24     	; 0xd5a <conv_int+0x48>
     d42:	8b 2d       	mov	r24, r11
     d44:	80 68       	ori	r24, 0x80	; 128
     d46:	b8 2e       	mov	r11, r24
     d48:	d1 50       	subi	r29, 0x01	; 1
     d4a:	11 f4       	brne	.+4      	; 0xd50 <conv_int+0x3e>
     d4c:	80 e0       	ldi	r24, 0x00	; 0
     d4e:	68 c0       	rjmp	.+208    	; 0xe20 <conv_int+0x10e>
     d50:	c8 01       	movw	r24, r16
     d52:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
     d56:	97 fd       	sbrc	r25, 7
     d58:	f9 cf       	rjmp	.-14     	; 0xd4c <conv_int+0x3a>
     d5a:	cb 2d       	mov	r28, r11
     d5c:	cd 7f       	andi	r28, 0xFD	; 253
     d5e:	2b 2d       	mov	r18, r11
     d60:	20 73       	andi	r18, 0x30	; 48
     d62:	09 f5       	brne	.+66     	; 0xda6 <conv_int+0x94>
     d64:	80 33       	cpi	r24, 0x30	; 48
     d66:	f9 f4       	brne	.+62     	; 0xda6 <conv_int+0x94>
     d68:	aa 24       	eor	r10, r10
     d6a:	aa 94       	dec	r10
     d6c:	ad 0e       	add	r10, r29
     d6e:	09 f4       	brne	.+2      	; 0xd72 <conv_int+0x60>
     d70:	43 c0       	rjmp	.+134    	; 0xdf8 <conv_int+0xe6>
     d72:	c8 01       	movw	r24, r16
     d74:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
     d78:	97 fd       	sbrc	r25, 7
     d7a:	3e c0       	rjmp	.+124    	; 0xdf8 <conv_int+0xe6>
     d7c:	9c 01       	movw	r18, r24
     d7e:	2f 7d       	andi	r18, 0xDF	; 223
     d80:	33 27       	eor	r19, r19
     d82:	28 35       	cpi	r18, 0x58	; 88
     d84:	31 05       	cpc	r19, r1
     d86:	49 f4       	brne	.+18     	; 0xd9a <conv_int+0x88>
     d88:	c2 64       	ori	r28, 0x42	; 66
     d8a:	d2 50       	subi	r29, 0x02	; 2
     d8c:	a9 f1       	breq	.+106    	; 0xdf8 <conv_int+0xe6>
     d8e:	c8 01       	movw	r24, r16
     d90:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
     d94:	97 ff       	sbrs	r25, 7
     d96:	07 c0       	rjmp	.+14     	; 0xda6 <conv_int+0x94>
     d98:	2f c0       	rjmp	.+94     	; 0xdf8 <conv_int+0xe6>
     d9a:	b6 fe       	sbrs	r11, 6
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <conv_int+0x90>
     d9e:	c2 60       	ori	r28, 0x02	; 2
     da0:	01 c0       	rjmp	.+2      	; 0xda4 <conv_int+0x92>
     da2:	c2 61       	ori	r28, 0x12	; 18
     da4:	da 2d       	mov	r29, r10
     da6:	81 2c       	mov	r8, r1
     da8:	91 2c       	mov	r9, r1
     daa:	54 01       	movw	r10, r8
     dac:	20 ed       	ldi	r18, 0xD0	; 208
     dae:	28 0f       	add	r18, r24
     db0:	28 30       	cpi	r18, 0x08	; 8
     db2:	80 f0       	brcs	.+32     	; 0xdd4 <conv_int+0xc2>
     db4:	c4 ff       	sbrs	r28, 4
     db6:	04 c0       	rjmp	.+8      	; 0xdc0 <conv_int+0xae>
     db8:	b8 01       	movw	r22, r16
     dba:	0e 94 8e 09 	call	0x131c	; 0x131c <ungetc>
     dbe:	19 c0       	rjmp	.+50     	; 0xdf2 <conv_int+0xe0>
     dc0:	2a 30       	cpi	r18, 0x0A	; 10
     dc2:	40 f0       	brcs	.+16     	; 0xdd4 <conv_int+0xc2>
     dc4:	c6 ff       	sbrs	r28, 6
     dc6:	f8 cf       	rjmp	.-16     	; 0xdb8 <conv_int+0xa6>
     dc8:	2f 7d       	andi	r18, 0xDF	; 223
     dca:	3f ee       	ldi	r19, 0xEF	; 239
     dcc:	32 0f       	add	r19, r18
     dce:	36 30       	cpi	r19, 0x06	; 6
     dd0:	98 f7       	brcc	.-26     	; 0xdb8 <conv_int+0xa6>
     dd2:	27 50       	subi	r18, 0x07	; 7
     dd4:	4c 2f       	mov	r20, r28
     dd6:	c5 01       	movw	r24, r10
     dd8:	b4 01       	movw	r22, r8
     dda:	0e 94 49 06 	call	0xc92	; 0xc92 <mulacc>
     dde:	4b 01       	movw	r8, r22
     de0:	5c 01       	movw	r10, r24
     de2:	c2 60       	ori	r28, 0x02	; 2
     de4:	d1 50       	subi	r29, 0x01	; 1
     de6:	59 f0       	breq	.+22     	; 0xdfe <conv_int+0xec>
     de8:	c8 01       	movw	r24, r16
     dea:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
     dee:	97 ff       	sbrs	r25, 7
     df0:	dd cf       	rjmp	.-70     	; 0xdac <conv_int+0x9a>
     df2:	c1 fd       	sbrc	r28, 1
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <conv_int+0xec>
     df6:	aa cf       	rjmp	.-172    	; 0xd4c <conv_int+0x3a>
     df8:	81 2c       	mov	r8, r1
     dfa:	91 2c       	mov	r9, r1
     dfc:	54 01       	movw	r10, r8
     dfe:	c7 ff       	sbrs	r28, 7
     e00:	08 c0       	rjmp	.+16     	; 0xe12 <conv_int+0x100>
     e02:	b0 94       	com	r11
     e04:	a0 94       	com	r10
     e06:	90 94       	com	r9
     e08:	80 94       	com	r8
     e0a:	81 1c       	adc	r8, r1
     e0c:	91 1c       	adc	r9, r1
     e0e:	a1 1c       	adc	r10, r1
     e10:	b1 1c       	adc	r11, r1
     e12:	2c 2f       	mov	r18, r28
     e14:	b5 01       	movw	r22, r10
     e16:	a4 01       	movw	r20, r8
     e18:	c7 01       	movw	r24, r14
     e1a:	0e 94 3d 06 	call	0xc7a	; 0xc7a <putval>
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	df 91       	pop	r29
     e22:	cf 91       	pop	r28
     e24:	1f 91       	pop	r17
     e26:	0f 91       	pop	r16
     e28:	ff 90       	pop	r15
     e2a:	ef 90       	pop	r14
     e2c:	bf 90       	pop	r11
     e2e:	af 90       	pop	r10
     e30:	9f 90       	pop	r9
     e32:	8f 90       	pop	r8
     e34:	08 95       	ret

00000e36 <conv_brk>:
     e36:	a0 e2       	ldi	r26, 0x20	; 32
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	e1 e2       	ldi	r30, 0x21	; 33
     e3c:	f7 e0       	ldi	r31, 0x07	; 7
     e3e:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__prologue_saves__+0x6>
     e42:	5c 01       	movw	r10, r24
     e44:	96 2e       	mov	r9, r22
     e46:	7a 01       	movw	r14, r20
     e48:	f9 01       	movw	r30, r18
     e4a:	8e 01       	movw	r16, r28
     e4c:	0f 5f       	subi	r16, 0xFF	; 255
     e4e:	1f 4f       	sbci	r17, 0xFF	; 255
     e50:	68 01       	movw	r12, r16
     e52:	80 e2       	ldi	r24, 0x20	; 32
     e54:	d8 01       	movw	r26, r16
     e56:	1d 92       	st	X+, r1
     e58:	8a 95       	dec	r24
     e5a:	e9 f7       	brne	.-6      	; 0xe56 <conv_brk+0x20>
     e5c:	d5 01       	movw	r26, r10
     e5e:	13 96       	adiw	r26, 0x03	; 3
     e60:	8c 90       	ld	r8, X
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	61 2c       	mov	r6, r1
     e68:	71 2c       	mov	r7, r1
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	61 e0       	ldi	r22, 0x01	; 1
     e6e:	70 e0       	ldi	r23, 0x00	; 0
     e70:	83 fc       	sbrc	r8, 3
     e72:	25 91       	lpm	r18, Z+
     e74:	83 fe       	sbrs	r8, 3
     e76:	21 91       	ld	r18, Z+
     e78:	8f 01       	movw	r16, r30
     e7a:	52 2e       	mov	r5, r18
     e7c:	21 11       	cpse	r18, r1
     e7e:	03 c0       	rjmp	.+6      	; 0xe86 <conv_brk+0x50>
     e80:	80 e0       	ldi	r24, 0x00	; 0
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	92 c0       	rjmp	.+292    	; 0xfaa <conv_brk+0x174>
     e86:	2e 35       	cpi	r18, 0x5E	; 94
     e88:	11 f4       	brne	.+4      	; 0xe8e <conv_brk+0x58>
     e8a:	00 97       	sbiw	r24, 0x00	; 0
     e8c:	51 f1       	breq	.+84     	; 0xee2 <conv_brk+0xac>
     e8e:	43 2f       	mov	r20, r19
     e90:	50 e0       	ldi	r21, 0x00	; 0
     e92:	48 17       	cp	r20, r24
     e94:	59 07       	cpc	r21, r25
     e96:	3c f4       	brge	.+14     	; 0xea6 <conv_brk+0x70>
     e98:	2d 35       	cpi	r18, 0x5D	; 93
     e9a:	59 f1       	breq	.+86     	; 0xef2 <conv_brk+0xbc>
     e9c:	2d 32       	cpi	r18, 0x2D	; 45
     e9e:	19 f4       	brne	.+6      	; 0xea6 <conv_brk+0x70>
     ea0:	77 20       	and	r7, r7
     ea2:	09 f1       	breq	.+66     	; 0xee6 <conv_brk+0xb0>
     ea4:	03 c0       	rjmp	.+6      	; 0xeac <conv_brk+0x76>
     ea6:	77 20       	and	r7, r7
     ea8:	09 f4       	brne	.+2      	; 0xeac <conv_brk+0x76>
     eaa:	6a c0       	rjmp	.+212    	; 0xf80 <conv_brk+0x14a>
     eac:	45 2d       	mov	r20, r5
     eae:	46 95       	lsr	r20
     eb0:	46 95       	lsr	r20
     eb2:	46 95       	lsr	r20
     eb4:	d6 01       	movw	r26, r12
     eb6:	a4 0f       	add	r26, r20
     eb8:	b1 1d       	adc	r27, r1
     eba:	45 2d       	mov	r20, r5
     ebc:	47 70       	andi	r20, 0x07	; 7
     ebe:	8b 01       	movw	r16, r22
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <conv_brk+0x90>
     ec2:	00 0f       	add	r16, r16
     ec4:	11 1f       	adc	r17, r17
     ec6:	4a 95       	dec	r20
     ec8:	e2 f7       	brpl	.-8      	; 0xec2 <conv_brk+0x8c>
     eca:	a8 01       	movw	r20, r16
     ecc:	5c 91       	ld	r21, X
     ece:	45 2b       	or	r20, r21
     ed0:	4c 93       	st	X, r20
     ed2:	65 14       	cp	r6, r5
     ed4:	59 f0       	breq	.+22     	; 0xeec <conv_brk+0xb6>
     ed6:	56 14       	cp	r5, r6
     ed8:	10 f4       	brcc	.+4      	; 0xede <conv_brk+0xa8>
     eda:	53 94       	inc	r5
     edc:	e7 cf       	rjmp	.-50     	; 0xeac <conv_brk+0x76>
     ede:	5a 94       	dec	r5
     ee0:	e5 cf       	rjmp	.-54     	; 0xeac <conv_brk+0x76>
     ee2:	31 e0       	ldi	r19, 0x01	; 1
     ee4:	04 c0       	rjmp	.+8      	; 0xeee <conv_brk+0xb8>
     ee6:	77 24       	eor	r7, r7
     ee8:	73 94       	inc	r7
     eea:	01 c0       	rjmp	.+2      	; 0xeee <conv_brk+0xb8>
     eec:	71 2c       	mov	r7, r1
     eee:	01 96       	adiw	r24, 0x01	; 1
     ef0:	bf cf       	rjmp	.-130    	; 0xe70 <conv_brk+0x3a>
     ef2:	77 20       	and	r7, r7
     ef4:	19 f0       	breq	.+6      	; 0xefc <conv_brk+0xc6>
     ef6:	8e 81       	ldd	r24, Y+6	; 0x06
     ef8:	80 62       	ori	r24, 0x20	; 32
     efa:	8e 83       	std	Y+6, r24	; 0x06
     efc:	31 11       	cpse	r19, r1
     efe:	03 c0       	rjmp	.+6      	; 0xf06 <conv_brk+0xd0>
     f00:	88 24       	eor	r8, r8
     f02:	83 94       	inc	r8
     f04:	17 c0       	rjmp	.+46     	; 0xf34 <conv_brk+0xfe>
     f06:	f6 01       	movw	r30, r12
     f08:	9e 01       	movw	r18, r28
     f0a:	2f 5d       	subi	r18, 0xDF	; 223
     f0c:	3f 4f       	sbci	r19, 0xFF	; 255
     f0e:	80 81       	ld	r24, Z
     f10:	80 95       	com	r24
     f12:	81 93       	st	Z+, r24
     f14:	2e 17       	cp	r18, r30
     f16:	3f 07       	cpc	r19, r31
     f18:	d1 f7       	brne	.-12     	; 0xf0e <conv_brk+0xd8>
     f1a:	f2 cf       	rjmp	.-28     	; 0xf00 <conv_brk+0xca>
     f1c:	e1 14       	cp	r14, r1
     f1e:	f1 04       	cpc	r15, r1
     f20:	29 f0       	breq	.+10     	; 0xf2c <conv_brk+0xf6>
     f22:	d7 01       	movw	r26, r14
     f24:	8c 93       	st	X, r24
     f26:	f7 01       	movw	r30, r14
     f28:	31 96       	adiw	r30, 0x01	; 1
     f2a:	7f 01       	movw	r14, r30
     f2c:	9a 94       	dec	r9
     f2e:	81 2c       	mov	r8, r1
     f30:	99 20       	and	r9, r9
     f32:	f9 f0       	breq	.+62     	; 0xf72 <conv_brk+0x13c>
     f34:	c5 01       	movw	r24, r10
     f36:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
     f3a:	97 fd       	sbrc	r25, 7
     f3c:	18 c0       	rjmp	.+48     	; 0xf6e <conv_brk+0x138>
     f3e:	fc 01       	movw	r30, r24
     f40:	ff 27       	eor	r31, r31
     f42:	23 e0       	ldi	r18, 0x03	; 3
     f44:	f5 95       	asr	r31
     f46:	e7 95       	ror	r30
     f48:	2a 95       	dec	r18
     f4a:	e1 f7       	brne	.-8      	; 0xf44 <conv_brk+0x10e>
     f4c:	ec 0d       	add	r30, r12
     f4e:	fd 1d       	adc	r31, r13
     f50:	20 81       	ld	r18, Z
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	ac 01       	movw	r20, r24
     f56:	47 70       	andi	r20, 0x07	; 7
     f58:	55 27       	eor	r21, r21
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <conv_brk+0x12a>
     f5c:	35 95       	asr	r19
     f5e:	27 95       	ror	r18
     f60:	4a 95       	dec	r20
     f62:	e2 f7       	brpl	.-8      	; 0xf5c <conv_brk+0x126>
     f64:	20 fd       	sbrc	r18, 0
     f66:	da cf       	rjmp	.-76     	; 0xf1c <conv_brk+0xe6>
     f68:	b5 01       	movw	r22, r10
     f6a:	0e 94 8e 09 	call	0x131c	; 0x131c <ungetc>
     f6e:	81 10       	cpse	r8, r1
     f70:	87 cf       	rjmp	.-242    	; 0xe80 <conv_brk+0x4a>
     f72:	e1 14       	cp	r14, r1
     f74:	f1 04       	cpc	r15, r1
     f76:	11 f0       	breq	.+4      	; 0xf7c <conv_brk+0x146>
     f78:	d7 01       	movw	r26, r14
     f7a:	1c 92       	st	X, r1
     f7c:	c8 01       	movw	r24, r16
     f7e:	15 c0       	rjmp	.+42     	; 0xfaa <conv_brk+0x174>
     f80:	42 2f       	mov	r20, r18
     f82:	46 95       	lsr	r20
     f84:	46 95       	lsr	r20
     f86:	46 95       	lsr	r20
     f88:	d6 01       	movw	r26, r12
     f8a:	a4 0f       	add	r26, r20
     f8c:	b1 1d       	adc	r27, r1
     f8e:	42 2f       	mov	r20, r18
     f90:	47 70       	andi	r20, 0x07	; 7
     f92:	8b 01       	movw	r16, r22
     f94:	02 c0       	rjmp	.+4      	; 0xf9a <conv_brk+0x164>
     f96:	00 0f       	add	r16, r16
     f98:	11 1f       	adc	r17, r17
     f9a:	4a 95       	dec	r20
     f9c:	e2 f7       	brpl	.-8      	; 0xf96 <conv_brk+0x160>
     f9e:	a8 01       	movw	r20, r16
     fa0:	5c 91       	ld	r21, X
     fa2:	45 2b       	or	r20, r21
     fa4:	4c 93       	st	X, r20
     fa6:	62 2e       	mov	r6, r18
     fa8:	a2 cf       	rjmp	.-188    	; 0xeee <conv_brk+0xb8>
     faa:	a0 96       	adiw	r28, 0x20	; 32
     fac:	ef e0       	ldi	r30, 0x0F	; 15
     fae:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__epilogue_restores__+0x6>

00000fb2 <vfscanf>:
     fb2:	a0 e0       	ldi	r26, 0x00	; 0
     fb4:	b0 e0       	ldi	r27, 0x00	; 0
     fb6:	ef ed       	ldi	r30, 0xDF	; 223
     fb8:	f7 e0       	ldi	r31, 0x07	; 7
     fba:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__prologue_saves__+0x6>
     fbe:	6c 01       	movw	r12, r24
     fc0:	eb 01       	movw	r28, r22
     fc2:	5a 01       	movw	r10, r20
     fc4:	fc 01       	movw	r30, r24
     fc6:	17 82       	std	Z+7, r1	; 0x07
     fc8:	16 82       	std	Z+6, r1	; 0x06
     fca:	51 2c       	mov	r5, r1
     fcc:	f6 01       	movw	r30, r12
     fce:	e3 80       	ldd	r14, Z+3	; 0x03
     fd0:	fe 01       	movw	r30, r28
     fd2:	e3 fc       	sbrc	r14, 3
     fd4:	85 91       	lpm	r24, Z+
     fd6:	e3 fe       	sbrs	r14, 3
     fd8:	81 91       	ld	r24, Z+
     fda:	18 2f       	mov	r17, r24
     fdc:	ef 01       	movw	r28, r30
     fde:	88 23       	and	r24, r24
     fe0:	09 f4       	brne	.+2      	; 0xfe4 <vfscanf+0x32>
     fe2:	ee c0       	rjmp	.+476    	; 0x11c0 <vfscanf+0x20e>
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <isspace>
     fea:	89 2b       	or	r24, r25
     fec:	21 f0       	breq	.+8      	; 0xff6 <vfscanf+0x44>
     fee:	c6 01       	movw	r24, r12
     ff0:	0e 94 70 06 	call	0xce0	; 0xce0 <skip_spaces>
     ff4:	eb cf       	rjmp	.-42     	; 0xfcc <vfscanf+0x1a>
     ff6:	15 32       	cpi	r17, 0x25	; 37
     ff8:	41 f4       	brne	.+16     	; 0x100a <vfscanf+0x58>
     ffa:	fe 01       	movw	r30, r28
     ffc:	e3 fc       	sbrc	r14, 3
     ffe:	15 91       	lpm	r17, Z+
    1000:	e3 fe       	sbrs	r14, 3
    1002:	11 91       	ld	r17, Z+
    1004:	ef 01       	movw	r28, r30
    1006:	15 32       	cpi	r17, 0x25	; 37
    1008:	81 f4       	brne	.+32     	; 0x102a <vfscanf+0x78>
    100a:	c6 01       	movw	r24, r12
    100c:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
    1010:	97 fd       	sbrc	r25, 7
    1012:	d4 c0       	rjmp	.+424    	; 0x11bc <vfscanf+0x20a>
    1014:	41 2f       	mov	r20, r17
    1016:	50 e0       	ldi	r21, 0x00	; 0
    1018:	9c 01       	movw	r18, r24
    101a:	33 27       	eor	r19, r19
    101c:	24 17       	cp	r18, r20
    101e:	35 07       	cpc	r19, r21
    1020:	a9 f2       	breq	.-86     	; 0xfcc <vfscanf+0x1a>
    1022:	b6 01       	movw	r22, r12
    1024:	0e 94 8e 09 	call	0x131c	; 0x131c <ungetc>
    1028:	cb c0       	rjmp	.+406    	; 0x11c0 <vfscanf+0x20e>
    102a:	1a 32       	cpi	r17, 0x2A	; 42
    102c:	39 f4       	brne	.+14     	; 0x103c <vfscanf+0x8a>
    102e:	e3 fc       	sbrc	r14, 3
    1030:	15 91       	lpm	r17, Z+
    1032:	e3 fe       	sbrs	r14, 3
    1034:	11 91       	ld	r17, Z+
    1036:	ef 01       	movw	r28, r30
    1038:	01 e0       	ldi	r16, 0x01	; 1
    103a:	01 c0       	rjmp	.+2      	; 0x103e <vfscanf+0x8c>
    103c:	00 e0       	ldi	r16, 0x00	; 0
    103e:	f1 2c       	mov	r15, r1
    1040:	20 ed       	ldi	r18, 0xD0	; 208
    1042:	21 0f       	add	r18, r17
    1044:	2a 30       	cpi	r18, 0x0A	; 10
    1046:	80 f4       	brcc	.+32     	; 0x1068 <vfscanf+0xb6>
    1048:	02 60       	ori	r16, 0x02	; 2
    104a:	6f 2d       	mov	r22, r15
    104c:	70 e0       	ldi	r23, 0x00	; 0
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	40 e2       	ldi	r20, 0x20	; 32
    1054:	0e 94 49 06 	call	0xc92	; 0xc92 <mulacc>
    1058:	f6 2e       	mov	r15, r22
    105a:	fe 01       	movw	r30, r28
    105c:	e3 fc       	sbrc	r14, 3
    105e:	15 91       	lpm	r17, Z+
    1060:	e3 fe       	sbrs	r14, 3
    1062:	11 91       	ld	r17, Z+
    1064:	ef 01       	movw	r28, r30
    1066:	ec cf       	rjmp	.-40     	; 0x1040 <vfscanf+0x8e>
    1068:	01 ff       	sbrs	r16, 1
    106a:	03 c0       	rjmp	.+6      	; 0x1072 <vfscanf+0xc0>
    106c:	f1 10       	cpse	r15, r1
    106e:	03 c0       	rjmp	.+6      	; 0x1076 <vfscanf+0xc4>
    1070:	a7 c0       	rjmp	.+334    	; 0x11c0 <vfscanf+0x20e>
    1072:	ff 24       	eor	r15, r15
    1074:	fa 94       	dec	r15
    1076:	18 36       	cpi	r17, 0x68	; 104
    1078:	19 f0       	breq	.+6      	; 0x1080 <vfscanf+0xce>
    107a:	1c 36       	cpi	r17, 0x6C	; 108
    107c:	51 f0       	breq	.+20     	; 0x1092 <vfscanf+0xe0>
    107e:	10 c0       	rjmp	.+32     	; 0x10a0 <vfscanf+0xee>
    1080:	fe 01       	movw	r30, r28
    1082:	e3 fc       	sbrc	r14, 3
    1084:	15 91       	lpm	r17, Z+
    1086:	e3 fe       	sbrs	r14, 3
    1088:	11 91       	ld	r17, Z+
    108a:	ef 01       	movw	r28, r30
    108c:	18 36       	cpi	r17, 0x68	; 104
    108e:	41 f4       	brne	.+16     	; 0x10a0 <vfscanf+0xee>
    1090:	08 60       	ori	r16, 0x08	; 8
    1092:	04 60       	ori	r16, 0x04	; 4
    1094:	fe 01       	movw	r30, r28
    1096:	e3 fc       	sbrc	r14, 3
    1098:	15 91       	lpm	r17, Z+
    109a:	e3 fe       	sbrs	r14, 3
    109c:	11 91       	ld	r17, Z+
    109e:	ef 01       	movw	r28, r30
    10a0:	11 23       	and	r17, r17
    10a2:	09 f4       	brne	.+2      	; 0x10a6 <vfscanf+0xf4>
    10a4:	8d c0       	rjmp	.+282    	; 0x11c0 <vfscanf+0x20e>
    10a6:	61 2f       	mov	r22, r17
    10a8:	70 e0       	ldi	r23, 0x00	; 0
    10aa:	88 e6       	ldi	r24, 0x68	; 104
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <strchr_P>
    10b2:	89 2b       	or	r24, r25
    10b4:	09 f4       	brne	.+2      	; 0x10b8 <vfscanf+0x106>
    10b6:	84 c0       	rjmp	.+264    	; 0x11c0 <vfscanf+0x20e>
    10b8:	00 fd       	sbrc	r16, 0
    10ba:	07 c0       	rjmp	.+14     	; 0x10ca <vfscanf+0x118>
    10bc:	f5 01       	movw	r30, r10
    10be:	80 80       	ld	r8, Z
    10c0:	91 80       	ldd	r9, Z+1	; 0x01
    10c2:	c5 01       	movw	r24, r10
    10c4:	02 96       	adiw	r24, 0x02	; 2
    10c6:	5c 01       	movw	r10, r24
    10c8:	02 c0       	rjmp	.+4      	; 0x10ce <vfscanf+0x11c>
    10ca:	81 2c       	mov	r8, r1
    10cc:	91 2c       	mov	r9, r1
    10ce:	1e 36       	cpi	r17, 0x6E	; 110
    10d0:	51 f4       	brne	.+20     	; 0x10e6 <vfscanf+0x134>
    10d2:	f6 01       	movw	r30, r12
    10d4:	46 81       	ldd	r20, Z+6	; 0x06
    10d6:	57 81       	ldd	r21, Z+7	; 0x07
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	20 2f       	mov	r18, r16
    10de:	c4 01       	movw	r24, r8
    10e0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <putval>
    10e4:	73 cf       	rjmp	.-282    	; 0xfcc <vfscanf+0x1a>
    10e6:	13 36       	cpi	r17, 0x63	; 99
    10e8:	a9 f4       	brne	.+42     	; 0x1114 <vfscanf+0x162>
    10ea:	01 fd       	sbrc	r16, 1
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <vfscanf+0x140>
    10ee:	ff 24       	eor	r15, r15
    10f0:	f3 94       	inc	r15
    10f2:	c6 01       	movw	r24, r12
    10f4:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
    10f8:	97 fd       	sbrc	r25, 7
    10fa:	60 c0       	rjmp	.+192    	; 0x11bc <vfscanf+0x20a>
    10fc:	81 14       	cp	r8, r1
    10fe:	91 04       	cpc	r9, r1
    1100:	29 f0       	breq	.+10     	; 0x110c <vfscanf+0x15a>
    1102:	f4 01       	movw	r30, r8
    1104:	80 83       	st	Z, r24
    1106:	c4 01       	movw	r24, r8
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	4c 01       	movw	r8, r24
    110c:	fa 94       	dec	r15
    110e:	f1 10       	cpse	r15, r1
    1110:	f0 cf       	rjmp	.-32     	; 0x10f2 <vfscanf+0x140>
    1112:	50 c0       	rjmp	.+160    	; 0x11b4 <vfscanf+0x202>
    1114:	1b 35       	cpi	r17, 0x5B	; 91
    1116:	59 f4       	brne	.+22     	; 0x112e <vfscanf+0x17c>
    1118:	9e 01       	movw	r18, r28
    111a:	a4 01       	movw	r20, r8
    111c:	6f 2d       	mov	r22, r15
    111e:	c6 01       	movw	r24, r12
    1120:	0e 94 1b 07 	call	0xe36	; 0xe36 <conv_brk>
    1124:	ec 01       	movw	r28, r24
    1126:	89 2b       	or	r24, r25
    1128:	09 f0       	breq	.+2      	; 0x112c <vfscanf+0x17a>
    112a:	44 c0       	rjmp	.+136    	; 0x11b4 <vfscanf+0x202>
    112c:	3e c0       	rjmp	.+124    	; 0x11aa <vfscanf+0x1f8>
    112e:	c6 01       	movw	r24, r12
    1130:	0e 94 70 06 	call	0xce0	; 0xce0 <skip_spaces>
    1134:	97 fd       	sbrc	r25, 7
    1136:	42 c0       	rjmp	.+132    	; 0x11bc <vfscanf+0x20a>
    1138:	1f 36       	cpi	r17, 0x6F	; 111
    113a:	61 f1       	breq	.+88     	; 0x1194 <vfscanf+0x1e2>
    113c:	28 f4       	brcc	.+10     	; 0x1148 <vfscanf+0x196>
    113e:	14 36       	cpi	r17, 0x64	; 100
    1140:	39 f1       	breq	.+78     	; 0x1190 <vfscanf+0x1de>
    1142:	19 36       	cpi	r17, 0x69	; 105
    1144:	51 f1       	breq	.+84     	; 0x119a <vfscanf+0x1e8>
    1146:	28 c0       	rjmp	.+80     	; 0x1198 <vfscanf+0x1e6>
    1148:	13 37       	cpi	r17, 0x73	; 115
    114a:	71 f0       	breq	.+28     	; 0x1168 <vfscanf+0x1b6>
    114c:	15 37       	cpi	r17, 0x75	; 117
    114e:	01 f1       	breq	.+64     	; 0x1190 <vfscanf+0x1de>
    1150:	23 c0       	rjmp	.+70     	; 0x1198 <vfscanf+0x1e6>
    1152:	81 14       	cp	r8, r1
    1154:	91 04       	cpc	r9, r1
    1156:	29 f0       	breq	.+10     	; 0x1162 <vfscanf+0x1b0>
    1158:	f4 01       	movw	r30, r8
    115a:	60 82       	st	Z, r6
    115c:	c4 01       	movw	r24, r8
    115e:	01 96       	adiw	r24, 0x01	; 1
    1160:	4c 01       	movw	r8, r24
    1162:	fa 94       	dec	r15
    1164:	ff 20       	and	r15, r15
    1166:	71 f0       	breq	.+28     	; 0x1184 <vfscanf+0x1d2>
    1168:	c6 01       	movw	r24, r12
    116a:	0e 94 14 09 	call	0x1228	; 0x1228 <fgetc>
    116e:	3c 01       	movw	r6, r24
    1170:	97 fd       	sbrc	r25, 7
    1172:	08 c0       	rjmp	.+16     	; 0x1184 <vfscanf+0x1d2>
    1174:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <isspace>
    1178:	89 2b       	or	r24, r25
    117a:	59 f3       	breq	.-42     	; 0x1152 <vfscanf+0x1a0>
    117c:	b6 01       	movw	r22, r12
    117e:	c3 01       	movw	r24, r6
    1180:	0e 94 8e 09 	call	0x131c	; 0x131c <ungetc>
    1184:	81 14       	cp	r8, r1
    1186:	91 04       	cpc	r9, r1
    1188:	a9 f0       	breq	.+42     	; 0x11b4 <vfscanf+0x202>
    118a:	f4 01       	movw	r30, r8
    118c:	10 82       	st	Z, r1
    118e:	12 c0       	rjmp	.+36     	; 0x11b4 <vfscanf+0x202>
    1190:	00 62       	ori	r16, 0x20	; 32
    1192:	03 c0       	rjmp	.+6      	; 0x119a <vfscanf+0x1e8>
    1194:	00 61       	ori	r16, 0x10	; 16
    1196:	01 c0       	rjmp	.+2      	; 0x119a <vfscanf+0x1e8>
    1198:	00 64       	ori	r16, 0x40	; 64
    119a:	20 2f       	mov	r18, r16
    119c:	a4 01       	movw	r20, r8
    119e:	6f 2d       	mov	r22, r15
    11a0:	c6 01       	movw	r24, r12
    11a2:	0e 94 89 06 	call	0xd12	; 0xd12 <conv_int>
    11a6:	81 11       	cpse	r24, r1
    11a8:	05 c0       	rjmp	.+10     	; 0x11b4 <vfscanf+0x202>
    11aa:	f6 01       	movw	r30, r12
    11ac:	83 81       	ldd	r24, Z+3	; 0x03
    11ae:	80 73       	andi	r24, 0x30	; 48
    11b0:	29 f4       	brne	.+10     	; 0x11bc <vfscanf+0x20a>
    11b2:	06 c0       	rjmp	.+12     	; 0x11c0 <vfscanf+0x20e>
    11b4:	00 fd       	sbrc	r16, 0
    11b6:	0a cf       	rjmp	.-492    	; 0xfcc <vfscanf+0x1a>
    11b8:	53 94       	inc	r5
    11ba:	08 cf       	rjmp	.-496    	; 0xfcc <vfscanf+0x1a>
    11bc:	55 20       	and	r5, r5
    11be:	19 f0       	breq	.+6      	; 0x11c6 <vfscanf+0x214>
    11c0:	85 2d       	mov	r24, r5
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <vfscanf+0x218>
    11c6:	8f ef       	ldi	r24, 0xFF	; 255
    11c8:	9f ef       	ldi	r25, 0xFF	; 255
    11ca:	cd b7       	in	r28, 0x3d	; 61
    11cc:	de b7       	in	r29, 0x3e	; 62
    11ce:	ef e0       	ldi	r30, 0x0F	; 15
    11d0:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__epilogue_restores__+0x6>

000011d4 <isspace>:
    11d4:	91 11       	cpse	r25, r1
    11d6:	0c 94 05 0a 	jmp	0x140a	; 0x140a <__ctype_isfalse>
    11da:	80 32       	cpi	r24, 0x20	; 32
    11dc:	19 f0       	breq	.+6      	; 0x11e4 <isspace+0x10>
    11de:	89 50       	subi	r24, 0x09	; 9
    11e0:	85 50       	subi	r24, 0x05	; 5
    11e2:	c8 f7       	brcc	.-14     	; 0x11d6 <isspace+0x2>
    11e4:	08 95       	ret

000011e6 <strchr_P>:
    11e6:	fc 01       	movw	r30, r24
    11e8:	05 90       	lpm	r0, Z+
    11ea:	06 16       	cp	r0, r22
    11ec:	21 f0       	breq	.+8      	; 0x11f6 <strchr_P+0x10>
    11ee:	00 20       	and	r0, r0
    11f0:	d9 f7       	brne	.-10     	; 0x11e8 <strchr_P+0x2>
    11f2:	c0 01       	movw	r24, r0
    11f4:	08 95       	ret
    11f6:	31 97       	sbiw	r30, 0x01	; 1
    11f8:	cf 01       	movw	r24, r30
    11fa:	08 95       	ret

000011fc <strnlen_P>:
    11fc:	fc 01       	movw	r30, r24
    11fe:	05 90       	lpm	r0, Z+
    1200:	61 50       	subi	r22, 0x01	; 1
    1202:	70 40       	sbci	r23, 0x00	; 0
    1204:	01 10       	cpse	r0, r1
    1206:	d8 f7       	brcc	.-10     	; 0x11fe <strnlen_P+0x2>
    1208:	80 95       	com	r24
    120a:	90 95       	com	r25
    120c:	8e 0f       	add	r24, r30
    120e:	9f 1f       	adc	r25, r31
    1210:	08 95       	ret

00001212 <strnlen>:
    1212:	fc 01       	movw	r30, r24
    1214:	61 50       	subi	r22, 0x01	; 1
    1216:	70 40       	sbci	r23, 0x00	; 0
    1218:	01 90       	ld	r0, Z+
    121a:	01 10       	cpse	r0, r1
    121c:	d8 f7       	brcc	.-10     	; 0x1214 <strnlen+0x2>
    121e:	80 95       	com	r24
    1220:	90 95       	com	r25
    1222:	8e 0f       	add	r24, r30
    1224:	9f 1f       	adc	r25, r31
    1226:	08 95       	ret

00001228 <fgetc>:
    1228:	cf 93       	push	r28
    122a:	df 93       	push	r29
    122c:	ec 01       	movw	r28, r24
    122e:	2b 81       	ldd	r18, Y+3	; 0x03
    1230:	20 ff       	sbrs	r18, 0
    1232:	33 c0       	rjmp	.+102    	; 0x129a <fgetc+0x72>
    1234:	26 ff       	sbrs	r18, 6
    1236:	0a c0       	rjmp	.+20     	; 0x124c <fgetc+0x24>
    1238:	2f 7b       	andi	r18, 0xBF	; 191
    123a:	2b 83       	std	Y+3, r18	; 0x03
    123c:	8e 81       	ldd	r24, Y+6	; 0x06
    123e:	9f 81       	ldd	r25, Y+7	; 0x07
    1240:	01 96       	adiw	r24, 0x01	; 1
    1242:	9f 83       	std	Y+7, r25	; 0x07
    1244:	8e 83       	std	Y+6, r24	; 0x06
    1246:	8a 81       	ldd	r24, Y+2	; 0x02
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	29 c0       	rjmp	.+82     	; 0x129e <fgetc+0x76>
    124c:	22 ff       	sbrs	r18, 2
    124e:	0f c0       	rjmp	.+30     	; 0x126e <fgetc+0x46>
    1250:	e8 81       	ld	r30, Y
    1252:	f9 81       	ldd	r31, Y+1	; 0x01
    1254:	80 81       	ld	r24, Z
    1256:	08 2e       	mov	r0, r24
    1258:	00 0c       	add	r0, r0
    125a:	99 0b       	sbc	r25, r25
    125c:	00 97       	sbiw	r24, 0x00	; 0
    125e:	19 f4       	brne	.+6      	; 0x1266 <fgetc+0x3e>
    1260:	20 62       	ori	r18, 0x20	; 32
    1262:	2b 83       	std	Y+3, r18	; 0x03
    1264:	1a c0       	rjmp	.+52     	; 0x129a <fgetc+0x72>
    1266:	31 96       	adiw	r30, 0x01	; 1
    1268:	f9 83       	std	Y+1, r31	; 0x01
    126a:	e8 83       	st	Y, r30
    126c:	0e c0       	rjmp	.+28     	; 0x128a <fgetc+0x62>
    126e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1270:	fb 85       	ldd	r31, Y+11	; 0x0b
    1272:	09 95       	icall
    1274:	97 ff       	sbrs	r25, 7
    1276:	09 c0       	rjmp	.+18     	; 0x128a <fgetc+0x62>
    1278:	2b 81       	ldd	r18, Y+3	; 0x03
    127a:	01 96       	adiw	r24, 0x01	; 1
    127c:	11 f0       	breq	.+4      	; 0x1282 <fgetc+0x5a>
    127e:	80 e2       	ldi	r24, 0x20	; 32
    1280:	01 c0       	rjmp	.+2      	; 0x1284 <fgetc+0x5c>
    1282:	80 e1       	ldi	r24, 0x10	; 16
    1284:	82 2b       	or	r24, r18
    1286:	8b 83       	std	Y+3, r24	; 0x03
    1288:	08 c0       	rjmp	.+16     	; 0x129a <fgetc+0x72>
    128a:	2e 81       	ldd	r18, Y+6	; 0x06
    128c:	3f 81       	ldd	r19, Y+7	; 0x07
    128e:	2f 5f       	subi	r18, 0xFF	; 255
    1290:	3f 4f       	sbci	r19, 0xFF	; 255
    1292:	3f 83       	std	Y+7, r19	; 0x07
    1294:	2e 83       	std	Y+6, r18	; 0x06
    1296:	99 27       	eor	r25, r25
    1298:	02 c0       	rjmp	.+4      	; 0x129e <fgetc+0x76>
    129a:	8f ef       	ldi	r24, 0xFF	; 255
    129c:	9f ef       	ldi	r25, 0xFF	; 255
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	08 95       	ret

000012a4 <fputc>:
    12a4:	0f 93       	push	r16
    12a6:	1f 93       	push	r17
    12a8:	cf 93       	push	r28
    12aa:	df 93       	push	r29
    12ac:	fb 01       	movw	r30, r22
    12ae:	23 81       	ldd	r18, Z+3	; 0x03
    12b0:	21 fd       	sbrc	r18, 1
    12b2:	03 c0       	rjmp	.+6      	; 0x12ba <fputc+0x16>
    12b4:	8f ef       	ldi	r24, 0xFF	; 255
    12b6:	9f ef       	ldi	r25, 0xFF	; 255
    12b8:	2c c0       	rjmp	.+88     	; 0x1312 <fputc+0x6e>
    12ba:	22 ff       	sbrs	r18, 2
    12bc:	16 c0       	rjmp	.+44     	; 0x12ea <fputc+0x46>
    12be:	46 81       	ldd	r20, Z+6	; 0x06
    12c0:	57 81       	ldd	r21, Z+7	; 0x07
    12c2:	24 81       	ldd	r18, Z+4	; 0x04
    12c4:	35 81       	ldd	r19, Z+5	; 0x05
    12c6:	42 17       	cp	r20, r18
    12c8:	53 07       	cpc	r21, r19
    12ca:	44 f4       	brge	.+16     	; 0x12dc <fputc+0x38>
    12cc:	a0 81       	ld	r26, Z
    12ce:	b1 81       	ldd	r27, Z+1	; 0x01
    12d0:	9d 01       	movw	r18, r26
    12d2:	2f 5f       	subi	r18, 0xFF	; 255
    12d4:	3f 4f       	sbci	r19, 0xFF	; 255
    12d6:	31 83       	std	Z+1, r19	; 0x01
    12d8:	20 83       	st	Z, r18
    12da:	8c 93       	st	X, r24
    12dc:	26 81       	ldd	r18, Z+6	; 0x06
    12de:	37 81       	ldd	r19, Z+7	; 0x07
    12e0:	2f 5f       	subi	r18, 0xFF	; 255
    12e2:	3f 4f       	sbci	r19, 0xFF	; 255
    12e4:	37 83       	std	Z+7, r19	; 0x07
    12e6:	26 83       	std	Z+6, r18	; 0x06
    12e8:	14 c0       	rjmp	.+40     	; 0x1312 <fputc+0x6e>
    12ea:	8b 01       	movw	r16, r22
    12ec:	ec 01       	movw	r28, r24
    12ee:	fb 01       	movw	r30, r22
    12f0:	00 84       	ldd	r0, Z+8	; 0x08
    12f2:	f1 85       	ldd	r31, Z+9	; 0x09
    12f4:	e0 2d       	mov	r30, r0
    12f6:	09 95       	icall
    12f8:	89 2b       	or	r24, r25
    12fa:	e1 f6       	brne	.-72     	; 0x12b4 <fputc+0x10>
    12fc:	d8 01       	movw	r26, r16
    12fe:	16 96       	adiw	r26, 0x06	; 6
    1300:	8d 91       	ld	r24, X+
    1302:	9c 91       	ld	r25, X
    1304:	17 97       	sbiw	r26, 0x07	; 7
    1306:	01 96       	adiw	r24, 0x01	; 1
    1308:	17 96       	adiw	r26, 0x07	; 7
    130a:	9c 93       	st	X, r25
    130c:	8e 93       	st	-X, r24
    130e:	16 97       	sbiw	r26, 0x06	; 6
    1310:	ce 01       	movw	r24, r28
    1312:	df 91       	pop	r29
    1314:	cf 91       	pop	r28
    1316:	1f 91       	pop	r17
    1318:	0f 91       	pop	r16
    131a:	08 95       	ret

0000131c <ungetc>:
    131c:	fb 01       	movw	r30, r22
    131e:	23 81       	ldd	r18, Z+3	; 0x03
    1320:	20 ff       	sbrs	r18, 0
    1322:	12 c0       	rjmp	.+36     	; 0x1348 <ungetc+0x2c>
    1324:	26 fd       	sbrc	r18, 6
    1326:	10 c0       	rjmp	.+32     	; 0x1348 <ungetc+0x2c>
    1328:	8f 3f       	cpi	r24, 0xFF	; 255
    132a:	3f ef       	ldi	r19, 0xFF	; 255
    132c:	93 07       	cpc	r25, r19
    132e:	61 f0       	breq	.+24     	; 0x1348 <ungetc+0x2c>
    1330:	82 83       	std	Z+2, r24	; 0x02
    1332:	2f 7d       	andi	r18, 0xDF	; 223
    1334:	20 64       	ori	r18, 0x40	; 64
    1336:	23 83       	std	Z+3, r18	; 0x03
    1338:	26 81       	ldd	r18, Z+6	; 0x06
    133a:	37 81       	ldd	r19, Z+7	; 0x07
    133c:	21 50       	subi	r18, 0x01	; 1
    133e:	31 09       	sbc	r19, r1
    1340:	37 83       	std	Z+7, r19	; 0x07
    1342:	26 83       	std	Z+6, r18	; 0x06
    1344:	99 27       	eor	r25, r25
    1346:	08 95       	ret
    1348:	8f ef       	ldi	r24, 0xFF	; 255
    134a:	9f ef       	ldi	r25, 0xFF	; 255
    134c:	08 95       	ret

0000134e <__ultoa_invert>:
    134e:	fa 01       	movw	r30, r20
    1350:	aa 27       	eor	r26, r26
    1352:	28 30       	cpi	r18, 0x08	; 8
    1354:	51 f1       	breq	.+84     	; 0x13aa <__ultoa_invert+0x5c>
    1356:	20 31       	cpi	r18, 0x10	; 16
    1358:	81 f1       	breq	.+96     	; 0x13ba <__ultoa_invert+0x6c>
    135a:	e8 94       	clt
    135c:	6f 93       	push	r22
    135e:	6e 7f       	andi	r22, 0xFE	; 254
    1360:	6e 5f       	subi	r22, 0xFE	; 254
    1362:	7f 4f       	sbci	r23, 0xFF	; 255
    1364:	8f 4f       	sbci	r24, 0xFF	; 255
    1366:	9f 4f       	sbci	r25, 0xFF	; 255
    1368:	af 4f       	sbci	r26, 0xFF	; 255
    136a:	b1 e0       	ldi	r27, 0x01	; 1
    136c:	3e d0       	rcall	.+124    	; 0x13ea <__ultoa_invert+0x9c>
    136e:	b4 e0       	ldi	r27, 0x04	; 4
    1370:	3c d0       	rcall	.+120    	; 0x13ea <__ultoa_invert+0x9c>
    1372:	67 0f       	add	r22, r23
    1374:	78 1f       	adc	r23, r24
    1376:	89 1f       	adc	r24, r25
    1378:	9a 1f       	adc	r25, r26
    137a:	a1 1d       	adc	r26, r1
    137c:	68 0f       	add	r22, r24
    137e:	79 1f       	adc	r23, r25
    1380:	8a 1f       	adc	r24, r26
    1382:	91 1d       	adc	r25, r1
    1384:	a1 1d       	adc	r26, r1
    1386:	6a 0f       	add	r22, r26
    1388:	71 1d       	adc	r23, r1
    138a:	81 1d       	adc	r24, r1
    138c:	91 1d       	adc	r25, r1
    138e:	a1 1d       	adc	r26, r1
    1390:	20 d0       	rcall	.+64     	; 0x13d2 <__ultoa_invert+0x84>
    1392:	09 f4       	brne	.+2      	; 0x1396 <__ultoa_invert+0x48>
    1394:	68 94       	set
    1396:	3f 91       	pop	r19
    1398:	2a e0       	ldi	r18, 0x0A	; 10
    139a:	26 9f       	mul	r18, r22
    139c:	11 24       	eor	r1, r1
    139e:	30 19       	sub	r19, r0
    13a0:	30 5d       	subi	r19, 0xD0	; 208
    13a2:	31 93       	st	Z+, r19
    13a4:	de f6       	brtc	.-74     	; 0x135c <__ultoa_invert+0xe>
    13a6:	cf 01       	movw	r24, r30
    13a8:	08 95       	ret
    13aa:	46 2f       	mov	r20, r22
    13ac:	47 70       	andi	r20, 0x07	; 7
    13ae:	40 5d       	subi	r20, 0xD0	; 208
    13b0:	41 93       	st	Z+, r20
    13b2:	b3 e0       	ldi	r27, 0x03	; 3
    13b4:	0f d0       	rcall	.+30     	; 0x13d4 <__ultoa_invert+0x86>
    13b6:	c9 f7       	brne	.-14     	; 0x13aa <__ultoa_invert+0x5c>
    13b8:	f6 cf       	rjmp	.-20     	; 0x13a6 <__ultoa_invert+0x58>
    13ba:	46 2f       	mov	r20, r22
    13bc:	4f 70       	andi	r20, 0x0F	; 15
    13be:	40 5d       	subi	r20, 0xD0	; 208
    13c0:	4a 33       	cpi	r20, 0x3A	; 58
    13c2:	18 f0       	brcs	.+6      	; 0x13ca <__ultoa_invert+0x7c>
    13c4:	49 5d       	subi	r20, 0xD9	; 217
    13c6:	31 fd       	sbrc	r19, 1
    13c8:	40 52       	subi	r20, 0x20	; 32
    13ca:	41 93       	st	Z+, r20
    13cc:	02 d0       	rcall	.+4      	; 0x13d2 <__ultoa_invert+0x84>
    13ce:	a9 f7       	brne	.-22     	; 0x13ba <__ultoa_invert+0x6c>
    13d0:	ea cf       	rjmp	.-44     	; 0x13a6 <__ultoa_invert+0x58>
    13d2:	b4 e0       	ldi	r27, 0x04	; 4
    13d4:	a6 95       	lsr	r26
    13d6:	97 95       	ror	r25
    13d8:	87 95       	ror	r24
    13da:	77 95       	ror	r23
    13dc:	67 95       	ror	r22
    13de:	ba 95       	dec	r27
    13e0:	c9 f7       	brne	.-14     	; 0x13d4 <__ultoa_invert+0x86>
    13e2:	00 97       	sbiw	r24, 0x00	; 0
    13e4:	61 05       	cpc	r22, r1
    13e6:	71 05       	cpc	r23, r1
    13e8:	08 95       	ret
    13ea:	9b 01       	movw	r18, r22
    13ec:	ac 01       	movw	r20, r24
    13ee:	0a 2e       	mov	r0, r26
    13f0:	06 94       	lsr	r0
    13f2:	57 95       	ror	r21
    13f4:	47 95       	ror	r20
    13f6:	37 95       	ror	r19
    13f8:	27 95       	ror	r18
    13fa:	ba 95       	dec	r27
    13fc:	c9 f7       	brne	.-14     	; 0x13f0 <__ultoa_invert+0xa2>
    13fe:	62 0f       	add	r22, r18
    1400:	73 1f       	adc	r23, r19
    1402:	84 1f       	adc	r24, r20
    1404:	95 1f       	adc	r25, r21
    1406:	a0 1d       	adc	r26, r0
    1408:	08 95       	ret

0000140a <__ctype_isfalse>:
    140a:	99 27       	eor	r25, r25
    140c:	88 27       	eor	r24, r24

0000140e <__ctype_istrue>:
    140e:	08 95       	ret

00001410 <__prologue_saves__>:
    1410:	2f 92       	push	r2
    1412:	3f 92       	push	r3
    1414:	4f 92       	push	r4
    1416:	5f 92       	push	r5
    1418:	6f 92       	push	r6
    141a:	7f 92       	push	r7
    141c:	8f 92       	push	r8
    141e:	9f 92       	push	r9
    1420:	af 92       	push	r10
    1422:	bf 92       	push	r11
    1424:	cf 92       	push	r12
    1426:	df 92       	push	r13
    1428:	ef 92       	push	r14
    142a:	ff 92       	push	r15
    142c:	0f 93       	push	r16
    142e:	1f 93       	push	r17
    1430:	cf 93       	push	r28
    1432:	df 93       	push	r29
    1434:	cd b7       	in	r28, 0x3d	; 61
    1436:	de b7       	in	r29, 0x3e	; 62
    1438:	ca 1b       	sub	r28, r26
    143a:	db 0b       	sbc	r29, r27
    143c:	0f b6       	in	r0, 0x3f	; 63
    143e:	f8 94       	cli
    1440:	de bf       	out	0x3e, r29	; 62
    1442:	0f be       	out	0x3f, r0	; 63
    1444:	cd bf       	out	0x3d, r28	; 61
    1446:	09 94       	ijmp

00001448 <__epilogue_restores__>:
    1448:	2a 88       	ldd	r2, Y+18	; 0x12
    144a:	39 88       	ldd	r3, Y+17	; 0x11
    144c:	48 88       	ldd	r4, Y+16	; 0x10
    144e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1450:	6e 84       	ldd	r6, Y+14	; 0x0e
    1452:	7d 84       	ldd	r7, Y+13	; 0x0d
    1454:	8c 84       	ldd	r8, Y+12	; 0x0c
    1456:	9b 84       	ldd	r9, Y+11	; 0x0b
    1458:	aa 84       	ldd	r10, Y+10	; 0x0a
    145a:	b9 84       	ldd	r11, Y+9	; 0x09
    145c:	c8 84       	ldd	r12, Y+8	; 0x08
    145e:	df 80       	ldd	r13, Y+7	; 0x07
    1460:	ee 80       	ldd	r14, Y+6	; 0x06
    1462:	fd 80       	ldd	r15, Y+5	; 0x05
    1464:	0c 81       	ldd	r16, Y+4	; 0x04
    1466:	1b 81       	ldd	r17, Y+3	; 0x03
    1468:	aa 81       	ldd	r26, Y+2	; 0x02
    146a:	b9 81       	ldd	r27, Y+1	; 0x01
    146c:	ce 0f       	add	r28, r30
    146e:	d1 1d       	adc	r29, r1
    1470:	0f b6       	in	r0, 0x3f	; 63
    1472:	f8 94       	cli
    1474:	de bf       	out	0x3e, r29	; 62
    1476:	0f be       	out	0x3f, r0	; 63
    1478:	cd bf       	out	0x3d, r28	; 61
    147a:	ed 01       	movw	r28, r26
    147c:	08 95       	ret

0000147e <_exit>:
    147e:	f8 94       	cli

00001480 <__stop_program>:
    1480:	ff cf       	rjmp	.-2      	; 0x1480 <__stop_program>
